// Copyright (C) 1991-2016 Altera Corporation. All rights reserved.
// Your use of Altera Corporation's design tools, logic functions 
// and other software and tools, and its AMPP partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Altera Program License 
// Subscription Agreement, the Altera Quartus Prime License Agreement,
// the Altera MegaCore Function License Agreement, or other 
// applicable license agreement, including, without limitation, 
// that your use is for the sole purpose of programming logic 
// devices manufactured by Altera and sold by Altera or its 
// authorized distributors.  Please refer to the applicable 
// agreement for further details.

// VENDOR "Altera"
// PROGRAM "Quartus Prime"
// VERSION "Version 16.0.0 Build 211 04/27/2016 SJ Lite Edition"

// DATE "09/24/2018 11:15:46"

// 
// Device: Altera EP4CE115F29C7 Package FBGA780
// 

// 
// This Verilog file should be used for ModelSim-Altera (Verilog) only
// 

`timescale 1 ps/ 1 ps

module relogio (
	CLOCK_50,
	KEY,
	SW,
	Mux_sel_6,
	Mux_sel_5,
	funcaoULA,
	state,
	is_ajusta,
	EnDH,
	EnUH,
	EnDM,
	\EnUM ,
	EnDS,
	EnUS,
	ResDH,
	ResUH,
	ResDM,
	ResUM,
	ResDS,
	ResUS,
	um_seg_out,
	DH_out,
	UH_out,
	DM_out,
	UM_out,
	DS_out,
	US_out,
	controle_out,
	LEDR,
	LEDG,
	HEX0,
	HEX1,
	HEX2,
	HEX3,
	HEX4,
	HEX5,
	HEX6,
	HEX7);
input 	CLOCK_50;
input 	[3:0] KEY;
input 	[17:0] SW;
output 	[2:0] Mux_sel_6;
output 	[2:0] Mux_sel_5;
output 	[1:0] funcaoULA;
output 	[3:0] state;
output 	is_ajusta;
output 	EnDH;
output 	EnUH;
output 	EnDM;
output 	\EnUM ;
output 	EnDS;
output 	EnUS;
output 	ResDH;
output 	ResUH;
output 	ResDM;
output 	ResUM;
output 	ResDS;
output 	ResUS;
output 	um_seg_out;
output 	[3:0] DH_out;
output 	[3:0] UH_out;
output 	[3:0] DM_out;
output 	[3:0] UM_out;
output 	[3:0] DS_out;
output 	[3:0] US_out;
output 	[20:0] controle_out;
output 	[17:0] LEDR;
output 	[8:0] LEDG;
output 	[6:0] HEX0;
output 	[6:0] HEX1;
output 	[6:0] HEX2;
output 	[6:0] HEX3;
output 	[6:0] HEX4;
output 	[6:0] HEX5;
output 	[6:0] HEX6;
output 	[6:0] HEX7;

wire gnd;
wire vcc;
wire unknown;

assign gnd = 1'b0;
assign vcc = 1'b1;
assign unknown = 1'bx;

tri1 devclrn;
tri1 devpor;
tri1 devoe;
wire \KEY[0]~input_o ;
wire \KEY[1]~input_o ;
wire \KEY[2]~input_o ;
wire \KEY[3]~input_o ;
wire \SW[0]~input_o ;
wire \SW[1]~input_o ;
wire \SW[2]~input_o ;
wire \SW[3]~input_o ;
wire \SW[4]~input_o ;
wire \SW[5]~input_o ;
wire \SW[6]~input_o ;
wire \SW[7]~input_o ;
wire \SW[8]~input_o ;
wire \SW[9]~input_o ;
wire \SW[10]~input_o ;
wire \SW[11]~input_o ;
wire \SW[12]~input_o ;
wire \SW[13]~input_o ;
wire \SW[14]~input_o ;
wire \SW[15]~input_o ;
wire \SW[16]~input_o ;
wire \SW[17]~input_o ;
wire \Mux_sel_6[0]~output_o ;
wire \Mux_sel_6[1]~output_o ;
wire \Mux_sel_6[2]~output_o ;
wire \Mux_sel_5[0]~output_o ;
wire \Mux_sel_5[1]~output_o ;
wire \Mux_sel_5[2]~output_o ;
wire \funcaoULA[0]~output_o ;
wire \funcaoULA[1]~output_o ;
wire \state[0]~output_o ;
wire \state[1]~output_o ;
wire \state[2]~output_o ;
wire \state[3]~output_o ;
wire \is_ajusta~output_o ;
wire \EnDH~output_o ;
wire \EnUH~output_o ;
wire \EnDM~output_o ;
wire \EnUM~output_o ;
wire \EnDS~output_o ;
wire \EnUS~output_o ;
wire \ResDH~output_o ;
wire \ResUH~output_o ;
wire \ResDM~output_o ;
wire \ResUM~output_o ;
wire \ResDS~output_o ;
wire \ResUS~output_o ;
wire \um_seg_out~output_o ;
wire \DH_out[0]~output_o ;
wire \DH_out[1]~output_o ;
wire \DH_out[2]~output_o ;
wire \DH_out[3]~output_o ;
wire \UH_out[0]~output_o ;
wire \UH_out[1]~output_o ;
wire \UH_out[2]~output_o ;
wire \UH_out[3]~output_o ;
wire \DM_out[0]~output_o ;
wire \DM_out[1]~output_o ;
wire \DM_out[2]~output_o ;
wire \DM_out[3]~output_o ;
wire \UM_out[0]~output_o ;
wire \UM_out[1]~output_o ;
wire \UM_out[2]~output_o ;
wire \UM_out[3]~output_o ;
wire \DS_out[0]~output_o ;
wire \DS_out[1]~output_o ;
wire \DS_out[2]~output_o ;
wire \DS_out[3]~output_o ;
wire \US_out[0]~output_o ;
wire \US_out[1]~output_o ;
wire \US_out[2]~output_o ;
wire \US_out[3]~output_o ;
wire \controle_out[0]~output_o ;
wire \controle_out[1]~output_o ;
wire \controle_out[2]~output_o ;
wire \controle_out[3]~output_o ;
wire \controle_out[4]~output_o ;
wire \controle_out[5]~output_o ;
wire \controle_out[6]~output_o ;
wire \controle_out[7]~output_o ;
wire \controle_out[8]~output_o ;
wire \controle_out[9]~output_o ;
wire \controle_out[10]~output_o ;
wire \controle_out[11]~output_o ;
wire \controle_out[12]~output_o ;
wire \controle_out[13]~output_o ;
wire \controle_out[14]~output_o ;
wire \controle_out[15]~output_o ;
wire \controle_out[16]~output_o ;
wire \controle_out[17]~output_o ;
wire \controle_out[18]~output_o ;
wire \controle_out[19]~output_o ;
wire \controle_out[20]~output_o ;
wire \LEDR[0]~output_o ;
wire \LEDR[1]~output_o ;
wire \LEDR[2]~output_o ;
wire \LEDR[3]~output_o ;
wire \LEDR[4]~output_o ;
wire \LEDR[5]~output_o ;
wire \LEDR[6]~output_o ;
wire \LEDR[7]~output_o ;
wire \LEDR[8]~output_o ;
wire \LEDR[9]~output_o ;
wire \LEDR[10]~output_o ;
wire \LEDR[11]~output_o ;
wire \LEDR[12]~output_o ;
wire \LEDR[13]~output_o ;
wire \LEDR[14]~output_o ;
wire \LEDR[15]~output_o ;
wire \LEDR[16]~output_o ;
wire \LEDR[17]~output_o ;
wire \LEDG[0]~output_o ;
wire \LEDG[1]~output_o ;
wire \LEDG[2]~output_o ;
wire \LEDG[3]~output_o ;
wire \LEDG[4]~output_o ;
wire \LEDG[5]~output_o ;
wire \LEDG[6]~output_o ;
wire \LEDG[7]~output_o ;
wire \LEDG[8]~output_o ;
wire \HEX0[0]~output_o ;
wire \HEX0[1]~output_o ;
wire \HEX0[2]~output_o ;
wire \HEX0[3]~output_o ;
wire \HEX0[4]~output_o ;
wire \HEX0[5]~output_o ;
wire \HEX0[6]~output_o ;
wire \HEX1[0]~output_o ;
wire \HEX1[1]~output_o ;
wire \HEX1[2]~output_o ;
wire \HEX1[3]~output_o ;
wire \HEX1[4]~output_o ;
wire \HEX1[5]~output_o ;
wire \HEX1[6]~output_o ;
wire \HEX2[0]~output_o ;
wire \HEX2[1]~output_o ;
wire \HEX2[2]~output_o ;
wire \HEX2[3]~output_o ;
wire \HEX2[4]~output_o ;
wire \HEX2[5]~output_o ;
wire \HEX2[6]~output_o ;
wire \HEX3[0]~output_o ;
wire \HEX3[1]~output_o ;
wire \HEX3[2]~output_o ;
wire \HEX3[3]~output_o ;
wire \HEX3[4]~output_o ;
wire \HEX3[5]~output_o ;
wire \HEX3[6]~output_o ;
wire \HEX4[0]~output_o ;
wire \HEX4[1]~output_o ;
wire \HEX4[2]~output_o ;
wire \HEX4[3]~output_o ;
wire \HEX4[4]~output_o ;
wire \HEX4[5]~output_o ;
wire \HEX4[6]~output_o ;
wire \HEX5[0]~output_o ;
wire \HEX5[1]~output_o ;
wire \HEX5[2]~output_o ;
wire \HEX5[3]~output_o ;
wire \HEX5[4]~output_o ;
wire \HEX5[5]~output_o ;
wire \HEX5[6]~output_o ;
wire \HEX6[0]~output_o ;
wire \HEX6[1]~output_o ;
wire \HEX6[2]~output_o ;
wire \HEX6[3]~output_o ;
wire \HEX6[4]~output_o ;
wire \HEX6[5]~output_o ;
wire \HEX6[6]~output_o ;
wire \HEX7[0]~output_o ;
wire \HEX7[1]~output_o ;
wire \HEX7[2]~output_o ;
wire \HEX7[3]~output_o ;
wire \HEX7[4]~output_o ;
wire \HEX7[5]~output_o ;
wire \HEX7[6]~output_o ;
wire \CLOCK_50~input_o ;
wire \FD|regUS|DOUT[0]~0_combout ;
wire \sequenciador|fstate.reset_all~q ;
wire \sequenciador|controle[15]~0_combout ;
wire \clk_1seg|counter[0]~28_combout ;
wire \clk_1seg|counter[23]~75 ;
wire \clk_1seg|counter[24]~76_combout ;
wire \clk_1seg|counter[24]~77 ;
wire \clk_1seg|counter[25]~78_combout ;
wire \clk_1seg|counter[25]~79 ;
wire \clk_1seg|counter[26]~80_combout ;
wire \clk_1seg|counter[26]~81 ;
wire \clk_1seg|counter[27]~82_combout ;
wire \clk_1seg|LessThan1~1_combout ;
wire \clk_1seg|LessThan1~2_combout ;
wire \clk_1seg|LessThan1~3_combout ;
wire \clk_1seg|LessThan0~0_combout ;
wire \clk_1seg|LessThan0~1_combout ;
wire \clk_1seg|LessThan0~2_combout ;
wire \clk_1seg|LessThan0~3_combout ;
wire \clk_1seg|counter[0]~29 ;
wire \clk_1seg|counter[1]~30_combout ;
wire \clk_1seg|counter[1]~31 ;
wire \clk_1seg|counter[2]~32_combout ;
wire \clk_1seg|counter[2]~33 ;
wire \clk_1seg|counter[3]~34_combout ;
wire \clk_1seg|counter[3]~35 ;
wire \clk_1seg|counter[4]~36_combout ;
wire \clk_1seg|counter[4]~37 ;
wire \clk_1seg|counter[5]~38_combout ;
wire \clk_1seg|counter[5]~39 ;
wire \clk_1seg|counter[6]~40_combout ;
wire \clk_1seg|counter[6]~41 ;
wire \clk_1seg|counter[7]~42_combout ;
wire \clk_1seg|counter[7]~43 ;
wire \clk_1seg|counter[8]~44_combout ;
wire \clk_1seg|counter[8]~45 ;
wire \clk_1seg|counter[9]~46_combout ;
wire \clk_1seg|counter[9]~47 ;
wire \clk_1seg|counter[10]~48_combout ;
wire \clk_1seg|counter[10]~49 ;
wire \clk_1seg|counter[11]~50_combout ;
wire \clk_1seg|counter[11]~51 ;
wire \clk_1seg|counter[12]~52_combout ;
wire \clk_1seg|counter[12]~53 ;
wire \clk_1seg|counter[13]~54_combout ;
wire \clk_1seg|counter[13]~55 ;
wire \clk_1seg|counter[14]~56_combout ;
wire \clk_1seg|counter[14]~57 ;
wire \clk_1seg|counter[15]~58_combout ;
wire \clk_1seg|counter[15]~59 ;
wire \clk_1seg|counter[16]~60_combout ;
wire \clk_1seg|counter[16]~61 ;
wire \clk_1seg|counter[17]~62_combout ;
wire \clk_1seg|counter[17]~63 ;
wire \clk_1seg|counter[18]~64_combout ;
wire \clk_1seg|counter[18]~65 ;
wire \clk_1seg|counter[19]~66_combout ;
wire \clk_1seg|counter[19]~67 ;
wire \clk_1seg|counter[20]~68_combout ;
wire \clk_1seg|counter[20]~69 ;
wire \clk_1seg|counter[21]~70_combout ;
wire \clk_1seg|counter[21]~71 ;
wire \clk_1seg|counter[22]~72_combout ;
wire \clk_1seg|counter[22]~73 ;
wire \clk_1seg|counter[23]~74_combout ;
wire \clk_1seg|LessThan1~0_combout ;
wire \clk_1seg|LessThan1~4_combout ;
wire \clk_1seg|LessThan1~5_combout ;
wire \clk_1seg|LessThan1~6_combout ;
wire \clk_1seg|LessThan1~7_combout ;
wire \sequenciador|Selector0~0_combout ;
wire \sequenciador|fstate.soma_us~q ;
wire \FD|ULA|Add0~0_combout ;
wire \FD|ULA|Add0~1_combout ;
wire \FD|ULA|Add0~2_combout ;
wire \FD|Z~0_combout ;
wire \sequenciador|Selector2~0_combout ;
wire \sequenciador|fstate.compara_us~q ;
wire \sequenciador|Selector1~0_combout ;
wire \sequenciador|Selector1~1_combout ;
wire \sequenciador|fstate.espera_seg~q ;
wire \display0|rascSaida7seg[0]~0_combout ;
wire \display0|rascSaida7seg[1]~1_combout ;
wire \display0|rascSaida7seg[2]~2_combout ;
wire \display0|rascSaida7seg[3]~3_combout ;
wire \display0|rascSaida7seg[4]~4_combout ;
wire \display0|rascSaida7seg[5]~5_combout ;
wire \display0|rascSaida7seg[6]~6_combout ;
wire [20:0] \sequenciador|controle ;
wire [3:0] \sequenciador|state ;
wire [3:0] \FD|regUS|DOUT ;
wire [27:0] \clk_1seg|counter ;


cycloneive_io_obuf \Mux_sel_6[0]~output (
	.i(gnd),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\Mux_sel_6[0]~output_o ),
	.obar());
// synopsys translate_off
defparam \Mux_sel_6[0]~output .bus_hold = "false";
defparam \Mux_sel_6[0]~output .open_drain_output = "false";
// synopsys translate_on

cycloneive_io_obuf \Mux_sel_6[1]~output (
	.i(gnd),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\Mux_sel_6[1]~output_o ),
	.obar());
// synopsys translate_off
defparam \Mux_sel_6[1]~output .bus_hold = "false";
defparam \Mux_sel_6[1]~output .open_drain_output = "false";
// synopsys translate_on

cycloneive_io_obuf \Mux_sel_6[2]~output (
	.i(gnd),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\Mux_sel_6[2]~output_o ),
	.obar());
// synopsys translate_off
defparam \Mux_sel_6[2]~output .bus_hold = "false";
defparam \Mux_sel_6[2]~output .open_drain_output = "false";
// synopsys translate_on

cycloneive_io_obuf \Mux_sel_5[0]~output (
	.i(gnd),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\Mux_sel_5[0]~output_o ),
	.obar());
// synopsys translate_off
defparam \Mux_sel_5[0]~output .bus_hold = "false";
defparam \Mux_sel_5[0]~output .open_drain_output = "false";
// synopsys translate_on

cycloneive_io_obuf \Mux_sel_5[1]~output (
	.i(gnd),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\Mux_sel_5[1]~output_o ),
	.obar());
// synopsys translate_off
defparam \Mux_sel_5[1]~output .bus_hold = "false";
defparam \Mux_sel_5[1]~output .open_drain_output = "false";
// synopsys translate_on

cycloneive_io_obuf \Mux_sel_5[2]~output (
	.i(gnd),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\Mux_sel_5[2]~output_o ),
	.obar());
// synopsys translate_off
defparam \Mux_sel_5[2]~output .bus_hold = "false";
defparam \Mux_sel_5[2]~output .open_drain_output = "false";
// synopsys translate_on

cycloneive_io_obuf \funcaoULA[0]~output (
	.i(gnd),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\funcaoULA[0]~output_o ),
	.obar());
// synopsys translate_off
defparam \funcaoULA[0]~output .bus_hold = "false";
defparam \funcaoULA[0]~output .open_drain_output = "false";
// synopsys translate_on

cycloneive_io_obuf \funcaoULA[1]~output (
	.i(gnd),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\funcaoULA[1]~output_o ),
	.obar());
// synopsys translate_off
defparam \funcaoULA[1]~output .bus_hold = "false";
defparam \funcaoULA[1]~output .open_drain_output = "false";
// synopsys translate_on

cycloneive_io_obuf \state[0]~output (
	.i(\sequenciador|state [0]),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\state[0]~output_o ),
	.obar());
// synopsys translate_off
defparam \state[0]~output .bus_hold = "false";
defparam \state[0]~output .open_drain_output = "false";
// synopsys translate_on

cycloneive_io_obuf \state[1]~output (
	.i(\sequenciador|state [1]),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\state[1]~output_o ),
	.obar());
// synopsys translate_off
defparam \state[1]~output .bus_hold = "false";
defparam \state[1]~output .open_drain_output = "false";
// synopsys translate_on

cycloneive_io_obuf \state[2]~output (
	.i(gnd),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\state[2]~output_o ),
	.obar());
// synopsys translate_off
defparam \state[2]~output .bus_hold = "false";
defparam \state[2]~output .open_drain_output = "false";
// synopsys translate_on

cycloneive_io_obuf \state[3]~output (
	.i(gnd),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\state[3]~output_o ),
	.obar());
// synopsys translate_off
defparam \state[3]~output .bus_hold = "false";
defparam \state[3]~output .open_drain_output = "false";
// synopsys translate_on

cycloneive_io_obuf \is_ajusta~output (
	.i(gnd),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\is_ajusta~output_o ),
	.obar());
// synopsys translate_off
defparam \is_ajusta~output .bus_hold = "false";
defparam \is_ajusta~output .open_drain_output = "false";
// synopsys translate_on

cycloneive_io_obuf \EnDH~output (
	.i(gnd),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\EnDH~output_o ),
	.obar());
// synopsys translate_off
defparam \EnDH~output .bus_hold = "false";
defparam \EnDH~output .open_drain_output = "false";
// synopsys translate_on

cycloneive_io_obuf \EnUH~output (
	.i(gnd),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\EnUH~output_o ),
	.obar());
// synopsys translate_off
defparam \EnUH~output .bus_hold = "false";
defparam \EnUH~output .open_drain_output = "false";
// synopsys translate_on

cycloneive_io_obuf \EnDM~output (
	.i(gnd),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\EnDM~output_o ),
	.obar());
// synopsys translate_off
defparam \EnDM~output .bus_hold = "false";
defparam \EnDM~output .open_drain_output = "false";
// synopsys translate_on

cycloneive_io_obuf \EnUM~output (
	.i(gnd),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\EnUM~output_o ),
	.obar());
// synopsys translate_off
defparam \EnUM~output .bus_hold = "false";
defparam \EnUM~output .open_drain_output = "false";
// synopsys translate_on

cycloneive_io_obuf \EnDS~output (
	.i(gnd),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\EnDS~output_o ),
	.obar());
// synopsys translate_off
defparam \EnDS~output .bus_hold = "false";
defparam \EnDS~output .open_drain_output = "false";
// synopsys translate_on

cycloneive_io_obuf \EnUS~output (
	.i(\sequenciador|controle [9]),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\EnUS~output_o ),
	.obar());
// synopsys translate_off
defparam \EnUS~output .bus_hold = "false";
defparam \EnUS~output .open_drain_output = "false";
// synopsys translate_on

cycloneive_io_obuf \ResDH~output (
	.i(\sequenciador|controle [15]),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\ResDH~output_o ),
	.obar());
// synopsys translate_off
defparam \ResDH~output .bus_hold = "false";
defparam \ResDH~output .open_drain_output = "false";
// synopsys translate_on

cycloneive_io_obuf \ResUH~output (
	.i(\sequenciador|controle [15]),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\ResUH~output_o ),
	.obar());
// synopsys translate_off
defparam \ResUH~output .bus_hold = "false";
defparam \ResUH~output .open_drain_output = "false";
// synopsys translate_on

cycloneive_io_obuf \ResDM~output (
	.i(\sequenciador|controle [15]),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\ResDM~output_o ),
	.obar());
// synopsys translate_off
defparam \ResDM~output .bus_hold = "false";
defparam \ResDM~output .open_drain_output = "false";
// synopsys translate_on

cycloneive_io_obuf \ResUM~output (
	.i(\sequenciador|controle [15]),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\ResUM~output_o ),
	.obar());
// synopsys translate_off
defparam \ResUM~output .bus_hold = "false";
defparam \ResUM~output .open_drain_output = "false";
// synopsys translate_on

cycloneive_io_obuf \ResDS~output (
	.i(\sequenciador|controle [15]),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\ResDS~output_o ),
	.obar());
// synopsys translate_off
defparam \ResDS~output .bus_hold = "false";
defparam \ResDS~output .open_drain_output = "false";
// synopsys translate_on

cycloneive_io_obuf \ResUS~output (
	.i(\sequenciador|controle [15]),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\ResUS~output_o ),
	.obar());
// synopsys translate_off
defparam \ResUS~output .bus_hold = "false";
defparam \ResUS~output .open_drain_output = "false";
// synopsys translate_on

cycloneive_io_obuf \um_seg_out~output (
	.i(!\clk_1seg|LessThan1~7_combout ),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\um_seg_out~output_o ),
	.obar());
// synopsys translate_off
defparam \um_seg_out~output .bus_hold = "false";
defparam \um_seg_out~output .open_drain_output = "false";
// synopsys translate_on

cycloneive_io_obuf \DH_out[0]~output (
	.i(gnd),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\DH_out[0]~output_o ),
	.obar());
// synopsys translate_off
defparam \DH_out[0]~output .bus_hold = "false";
defparam \DH_out[0]~output .open_drain_output = "false";
// synopsys translate_on

cycloneive_io_obuf \DH_out[1]~output (
	.i(gnd),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\DH_out[1]~output_o ),
	.obar());
// synopsys translate_off
defparam \DH_out[1]~output .bus_hold = "false";
defparam \DH_out[1]~output .open_drain_output = "false";
// synopsys translate_on

cycloneive_io_obuf \DH_out[2]~output (
	.i(gnd),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\DH_out[2]~output_o ),
	.obar());
// synopsys translate_off
defparam \DH_out[2]~output .bus_hold = "false";
defparam \DH_out[2]~output .open_drain_output = "false";
// synopsys translate_on

cycloneive_io_obuf \DH_out[3]~output (
	.i(gnd),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\DH_out[3]~output_o ),
	.obar());
// synopsys translate_off
defparam \DH_out[3]~output .bus_hold = "false";
defparam \DH_out[3]~output .open_drain_output = "false";
// synopsys translate_on

cycloneive_io_obuf \UH_out[0]~output (
	.i(gnd),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\UH_out[0]~output_o ),
	.obar());
// synopsys translate_off
defparam \UH_out[0]~output .bus_hold = "false";
defparam \UH_out[0]~output .open_drain_output = "false";
// synopsys translate_on

cycloneive_io_obuf \UH_out[1]~output (
	.i(gnd),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\UH_out[1]~output_o ),
	.obar());
// synopsys translate_off
defparam \UH_out[1]~output .bus_hold = "false";
defparam \UH_out[1]~output .open_drain_output = "false";
// synopsys translate_on

cycloneive_io_obuf \UH_out[2]~output (
	.i(gnd),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\UH_out[2]~output_o ),
	.obar());
// synopsys translate_off
defparam \UH_out[2]~output .bus_hold = "false";
defparam \UH_out[2]~output .open_drain_output = "false";
// synopsys translate_on

cycloneive_io_obuf \UH_out[3]~output (
	.i(gnd),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\UH_out[3]~output_o ),
	.obar());
// synopsys translate_off
defparam \UH_out[3]~output .bus_hold = "false";
defparam \UH_out[3]~output .open_drain_output = "false";
// synopsys translate_on

cycloneive_io_obuf \DM_out[0]~output (
	.i(gnd),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\DM_out[0]~output_o ),
	.obar());
// synopsys translate_off
defparam \DM_out[0]~output .bus_hold = "false";
defparam \DM_out[0]~output .open_drain_output = "false";
// synopsys translate_on

cycloneive_io_obuf \DM_out[1]~output (
	.i(gnd),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\DM_out[1]~output_o ),
	.obar());
// synopsys translate_off
defparam \DM_out[1]~output .bus_hold = "false";
defparam \DM_out[1]~output .open_drain_output = "false";
// synopsys translate_on

cycloneive_io_obuf \DM_out[2]~output (
	.i(gnd),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\DM_out[2]~output_o ),
	.obar());
// synopsys translate_off
defparam \DM_out[2]~output .bus_hold = "false";
defparam \DM_out[2]~output .open_drain_output = "false";
// synopsys translate_on

cycloneive_io_obuf \DM_out[3]~output (
	.i(gnd),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\DM_out[3]~output_o ),
	.obar());
// synopsys translate_off
defparam \DM_out[3]~output .bus_hold = "false";
defparam \DM_out[3]~output .open_drain_output = "false";
// synopsys translate_on

cycloneive_io_obuf \UM_out[0]~output (
	.i(gnd),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\UM_out[0]~output_o ),
	.obar());
// synopsys translate_off
defparam \UM_out[0]~output .bus_hold = "false";
defparam \UM_out[0]~output .open_drain_output = "false";
// synopsys translate_on

cycloneive_io_obuf \UM_out[1]~output (
	.i(gnd),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\UM_out[1]~output_o ),
	.obar());
// synopsys translate_off
defparam \UM_out[1]~output .bus_hold = "false";
defparam \UM_out[1]~output .open_drain_output = "false";
// synopsys translate_on

cycloneive_io_obuf \UM_out[2]~output (
	.i(gnd),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\UM_out[2]~output_o ),
	.obar());
// synopsys translate_off
defparam \UM_out[2]~output .bus_hold = "false";
defparam \UM_out[2]~output .open_drain_output = "false";
// synopsys translate_on

cycloneive_io_obuf \UM_out[3]~output (
	.i(gnd),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\UM_out[3]~output_o ),
	.obar());
// synopsys translate_off
defparam \UM_out[3]~output .bus_hold = "false";
defparam \UM_out[3]~output .open_drain_output = "false";
// synopsys translate_on

cycloneive_io_obuf \DS_out[0]~output (
	.i(gnd),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\DS_out[0]~output_o ),
	.obar());
// synopsys translate_off
defparam \DS_out[0]~output .bus_hold = "false";
defparam \DS_out[0]~output .open_drain_output = "false";
// synopsys translate_on

cycloneive_io_obuf \DS_out[1]~output (
	.i(gnd),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\DS_out[1]~output_o ),
	.obar());
// synopsys translate_off
defparam \DS_out[1]~output .bus_hold = "false";
defparam \DS_out[1]~output .open_drain_output = "false";
// synopsys translate_on

cycloneive_io_obuf \DS_out[2]~output (
	.i(gnd),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\DS_out[2]~output_o ),
	.obar());
// synopsys translate_off
defparam \DS_out[2]~output .bus_hold = "false";
defparam \DS_out[2]~output .open_drain_output = "false";
// synopsys translate_on

cycloneive_io_obuf \DS_out[3]~output (
	.i(gnd),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\DS_out[3]~output_o ),
	.obar());
// synopsys translate_off
defparam \DS_out[3]~output .bus_hold = "false";
defparam \DS_out[3]~output .open_drain_output = "false";
// synopsys translate_on

cycloneive_io_obuf \US_out[0]~output (
	.i(\FD|regUS|DOUT [0]),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\US_out[0]~output_o ),
	.obar());
// synopsys translate_off
defparam \US_out[0]~output .bus_hold = "false";
defparam \US_out[0]~output .open_drain_output = "false";
// synopsys translate_on

cycloneive_io_obuf \US_out[1]~output (
	.i(\FD|regUS|DOUT [1]),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\US_out[1]~output_o ),
	.obar());
// synopsys translate_off
defparam \US_out[1]~output .bus_hold = "false";
defparam \US_out[1]~output .open_drain_output = "false";
// synopsys translate_on

cycloneive_io_obuf \US_out[2]~output (
	.i(\FD|regUS|DOUT [2]),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\US_out[2]~output_o ),
	.obar());
// synopsys translate_off
defparam \US_out[2]~output .bus_hold = "false";
defparam \US_out[2]~output .open_drain_output = "false";
// synopsys translate_on

cycloneive_io_obuf \US_out[3]~output (
	.i(\FD|regUS|DOUT [3]),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\US_out[3]~output_o ),
	.obar());
// synopsys translate_off
defparam \US_out[3]~output .bus_hold = "false";
defparam \US_out[3]~output .open_drain_output = "false";
// synopsys translate_on

cycloneive_io_obuf \controle_out[0]~output (
	.i(gnd),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\controle_out[0]~output_o ),
	.obar());
// synopsys translate_off
defparam \controle_out[0]~output .bus_hold = "false";
defparam \controle_out[0]~output .open_drain_output = "false";
// synopsys translate_on

cycloneive_io_obuf \controle_out[1]~output (
	.i(gnd),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\controle_out[1]~output_o ),
	.obar());
// synopsys translate_off
defparam \controle_out[1]~output .bus_hold = "false";
defparam \controle_out[1]~output .open_drain_output = "false";
// synopsys translate_on

cycloneive_io_obuf \controle_out[2]~output (
	.i(gnd),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\controle_out[2]~output_o ),
	.obar());
// synopsys translate_off
defparam \controle_out[2]~output .bus_hold = "false";
defparam \controle_out[2]~output .open_drain_output = "false";
// synopsys translate_on

cycloneive_io_obuf \controle_out[3]~output (
	.i(gnd),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\controle_out[3]~output_o ),
	.obar());
// synopsys translate_off
defparam \controle_out[3]~output .bus_hold = "false";
defparam \controle_out[3]~output .open_drain_output = "false";
// synopsys translate_on

cycloneive_io_obuf \controle_out[4]~output (
	.i(gnd),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\controle_out[4]~output_o ),
	.obar());
// synopsys translate_off
defparam \controle_out[4]~output .bus_hold = "false";
defparam \controle_out[4]~output .open_drain_output = "false";
// synopsys translate_on

cycloneive_io_obuf \controle_out[5]~output (
	.i(gnd),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\controle_out[5]~output_o ),
	.obar());
// synopsys translate_off
defparam \controle_out[5]~output .bus_hold = "false";
defparam \controle_out[5]~output .open_drain_output = "false";
// synopsys translate_on

cycloneive_io_obuf \controle_out[6]~output (
	.i(gnd),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\controle_out[6]~output_o ),
	.obar());
// synopsys translate_off
defparam \controle_out[6]~output .bus_hold = "false";
defparam \controle_out[6]~output .open_drain_output = "false";
// synopsys translate_on

cycloneive_io_obuf \controle_out[7]~output (
	.i(gnd),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\controle_out[7]~output_o ),
	.obar());
// synopsys translate_off
defparam \controle_out[7]~output .bus_hold = "false";
defparam \controle_out[7]~output .open_drain_output = "false";
// synopsys translate_on

cycloneive_io_obuf \controle_out[8]~output (
	.i(gnd),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\controle_out[8]~output_o ),
	.obar());
// synopsys translate_off
defparam \controle_out[8]~output .bus_hold = "false";
defparam \controle_out[8]~output .open_drain_output = "false";
// synopsys translate_on

cycloneive_io_obuf \controle_out[9]~output (
	.i(\sequenciador|controle [9]),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\controle_out[9]~output_o ),
	.obar());
// synopsys translate_off
defparam \controle_out[9]~output .bus_hold = "false";
defparam \controle_out[9]~output .open_drain_output = "false";
// synopsys translate_on

cycloneive_io_obuf \controle_out[10]~output (
	.i(gnd),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\controle_out[10]~output_o ),
	.obar());
// synopsys translate_off
defparam \controle_out[10]~output .bus_hold = "false";
defparam \controle_out[10]~output .open_drain_output = "false";
// synopsys translate_on

cycloneive_io_obuf \controle_out[11]~output (
	.i(gnd),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\controle_out[11]~output_o ),
	.obar());
// synopsys translate_off
defparam \controle_out[11]~output .bus_hold = "false";
defparam \controle_out[11]~output .open_drain_output = "false";
// synopsys translate_on

cycloneive_io_obuf \controle_out[12]~output (
	.i(gnd),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\controle_out[12]~output_o ),
	.obar());
// synopsys translate_off
defparam \controle_out[12]~output .bus_hold = "false";
defparam \controle_out[12]~output .open_drain_output = "false";
// synopsys translate_on

cycloneive_io_obuf \controle_out[13]~output (
	.i(gnd),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\controle_out[13]~output_o ),
	.obar());
// synopsys translate_off
defparam \controle_out[13]~output .bus_hold = "false";
defparam \controle_out[13]~output .open_drain_output = "false";
// synopsys translate_on

cycloneive_io_obuf \controle_out[14]~output (
	.i(gnd),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\controle_out[14]~output_o ),
	.obar());
// synopsys translate_off
defparam \controle_out[14]~output .bus_hold = "false";
defparam \controle_out[14]~output .open_drain_output = "false";
// synopsys translate_on

cycloneive_io_obuf \controle_out[15]~output (
	.i(\sequenciador|controle [15]),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\controle_out[15]~output_o ),
	.obar());
// synopsys translate_off
defparam \controle_out[15]~output .bus_hold = "false";
defparam \controle_out[15]~output .open_drain_output = "false";
// synopsys translate_on

cycloneive_io_obuf \controle_out[16]~output (
	.i(\sequenciador|controle [15]),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\controle_out[16]~output_o ),
	.obar());
// synopsys translate_off
defparam \controle_out[16]~output .bus_hold = "false";
defparam \controle_out[16]~output .open_drain_output = "false";
// synopsys translate_on

cycloneive_io_obuf \controle_out[17]~output (
	.i(\sequenciador|controle [15]),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\controle_out[17]~output_o ),
	.obar());
// synopsys translate_off
defparam \controle_out[17]~output .bus_hold = "false";
defparam \controle_out[17]~output .open_drain_output = "false";
// synopsys translate_on

cycloneive_io_obuf \controle_out[18]~output (
	.i(\sequenciador|controle [15]),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\controle_out[18]~output_o ),
	.obar());
// synopsys translate_off
defparam \controle_out[18]~output .bus_hold = "false";
defparam \controle_out[18]~output .open_drain_output = "false";
// synopsys translate_on

cycloneive_io_obuf \controle_out[19]~output (
	.i(\sequenciador|controle [15]),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\controle_out[19]~output_o ),
	.obar());
// synopsys translate_off
defparam \controle_out[19]~output .bus_hold = "false";
defparam \controle_out[19]~output .open_drain_output = "false";
// synopsys translate_on

cycloneive_io_obuf \controle_out[20]~output (
	.i(\sequenciador|controle [15]),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\controle_out[20]~output_o ),
	.obar());
// synopsys translate_off
defparam \controle_out[20]~output .bus_hold = "false";
defparam \controle_out[20]~output .open_drain_output = "false";
// synopsys translate_on

cycloneive_io_obuf \LEDR[0]~output (
	.i(gnd),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\LEDR[0]~output_o ),
	.obar());
// synopsys translate_off
defparam \LEDR[0]~output .bus_hold = "false";
defparam \LEDR[0]~output .open_drain_output = "false";
// synopsys translate_on

cycloneive_io_obuf \LEDR[1]~output (
	.i(gnd),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\LEDR[1]~output_o ),
	.obar());
// synopsys translate_off
defparam \LEDR[1]~output .bus_hold = "false";
defparam \LEDR[1]~output .open_drain_output = "false";
// synopsys translate_on

cycloneive_io_obuf \LEDR[2]~output (
	.i(gnd),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\LEDR[2]~output_o ),
	.obar());
// synopsys translate_off
defparam \LEDR[2]~output .bus_hold = "false";
defparam \LEDR[2]~output .open_drain_output = "false";
// synopsys translate_on

cycloneive_io_obuf \LEDR[3]~output (
	.i(gnd),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\LEDR[3]~output_o ),
	.obar());
// synopsys translate_off
defparam \LEDR[3]~output .bus_hold = "false";
defparam \LEDR[3]~output .open_drain_output = "false";
// synopsys translate_on

cycloneive_io_obuf \LEDR[4]~output (
	.i(gnd),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\LEDR[4]~output_o ),
	.obar());
// synopsys translate_off
defparam \LEDR[4]~output .bus_hold = "false";
defparam \LEDR[4]~output .open_drain_output = "false";
// synopsys translate_on

cycloneive_io_obuf \LEDR[5]~output (
	.i(gnd),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\LEDR[5]~output_o ),
	.obar());
// synopsys translate_off
defparam \LEDR[5]~output .bus_hold = "false";
defparam \LEDR[5]~output .open_drain_output = "false";
// synopsys translate_on

cycloneive_io_obuf \LEDR[6]~output (
	.i(gnd),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\LEDR[6]~output_o ),
	.obar());
// synopsys translate_off
defparam \LEDR[6]~output .bus_hold = "false";
defparam \LEDR[6]~output .open_drain_output = "false";
// synopsys translate_on

cycloneive_io_obuf \LEDR[7]~output (
	.i(gnd),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\LEDR[7]~output_o ),
	.obar());
// synopsys translate_off
defparam \LEDR[7]~output .bus_hold = "false";
defparam \LEDR[7]~output .open_drain_output = "false";
// synopsys translate_on

cycloneive_io_obuf \LEDR[8]~output (
	.i(gnd),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\LEDR[8]~output_o ),
	.obar());
// synopsys translate_off
defparam \LEDR[8]~output .bus_hold = "false";
defparam \LEDR[8]~output .open_drain_output = "false";
// synopsys translate_on

cycloneive_io_obuf \LEDR[9]~output (
	.i(gnd),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\LEDR[9]~output_o ),
	.obar());
// synopsys translate_off
defparam \LEDR[9]~output .bus_hold = "false";
defparam \LEDR[9]~output .open_drain_output = "false";
// synopsys translate_on

cycloneive_io_obuf \LEDR[10]~output (
	.i(gnd),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\LEDR[10]~output_o ),
	.obar());
// synopsys translate_off
defparam \LEDR[10]~output .bus_hold = "false";
defparam \LEDR[10]~output .open_drain_output = "false";
// synopsys translate_on

cycloneive_io_obuf \LEDR[11]~output (
	.i(gnd),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\LEDR[11]~output_o ),
	.obar());
// synopsys translate_off
defparam \LEDR[11]~output .bus_hold = "false";
defparam \LEDR[11]~output .open_drain_output = "false";
// synopsys translate_on

cycloneive_io_obuf \LEDR[12]~output (
	.i(gnd),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\LEDR[12]~output_o ),
	.obar());
// synopsys translate_off
defparam \LEDR[12]~output .bus_hold = "false";
defparam \LEDR[12]~output .open_drain_output = "false";
// synopsys translate_on

cycloneive_io_obuf \LEDR[13]~output (
	.i(gnd),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\LEDR[13]~output_o ),
	.obar());
// synopsys translate_off
defparam \LEDR[13]~output .bus_hold = "false";
defparam \LEDR[13]~output .open_drain_output = "false";
// synopsys translate_on

cycloneive_io_obuf \LEDR[14]~output (
	.i(gnd),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\LEDR[14]~output_o ),
	.obar());
// synopsys translate_off
defparam \LEDR[14]~output .bus_hold = "false";
defparam \LEDR[14]~output .open_drain_output = "false";
// synopsys translate_on

cycloneive_io_obuf \LEDR[15]~output (
	.i(gnd),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\LEDR[15]~output_o ),
	.obar());
// synopsys translate_off
defparam \LEDR[15]~output .bus_hold = "false";
defparam \LEDR[15]~output .open_drain_output = "false";
// synopsys translate_on

cycloneive_io_obuf \LEDR[16]~output (
	.i(gnd),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\LEDR[16]~output_o ),
	.obar());
// synopsys translate_off
defparam \LEDR[16]~output .bus_hold = "false";
defparam \LEDR[16]~output .open_drain_output = "false";
// synopsys translate_on

cycloneive_io_obuf \LEDR[17]~output (
	.i(gnd),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\LEDR[17]~output_o ),
	.obar());
// synopsys translate_off
defparam \LEDR[17]~output .bus_hold = "false";
defparam \LEDR[17]~output .open_drain_output = "false";
// synopsys translate_on

cycloneive_io_obuf \LEDG[0]~output (
	.i(gnd),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\LEDG[0]~output_o ),
	.obar());
// synopsys translate_off
defparam \LEDG[0]~output .bus_hold = "false";
defparam \LEDG[0]~output .open_drain_output = "false";
// synopsys translate_on

cycloneive_io_obuf \LEDG[1]~output (
	.i(gnd),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\LEDG[1]~output_o ),
	.obar());
// synopsys translate_off
defparam \LEDG[1]~output .bus_hold = "false";
defparam \LEDG[1]~output .open_drain_output = "false";
// synopsys translate_on

cycloneive_io_obuf \LEDG[2]~output (
	.i(gnd),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\LEDG[2]~output_o ),
	.obar());
// synopsys translate_off
defparam \LEDG[2]~output .bus_hold = "false";
defparam \LEDG[2]~output .open_drain_output = "false";
// synopsys translate_on

cycloneive_io_obuf \LEDG[3]~output (
	.i(gnd),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\LEDG[3]~output_o ),
	.obar());
// synopsys translate_off
defparam \LEDG[3]~output .bus_hold = "false";
defparam \LEDG[3]~output .open_drain_output = "false";
// synopsys translate_on

cycloneive_io_obuf \LEDG[4]~output (
	.i(gnd),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\LEDG[4]~output_o ),
	.obar());
// synopsys translate_off
defparam \LEDG[4]~output .bus_hold = "false";
defparam \LEDG[4]~output .open_drain_output = "false";
// synopsys translate_on

cycloneive_io_obuf \LEDG[5]~output (
	.i(gnd),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\LEDG[5]~output_o ),
	.obar());
// synopsys translate_off
defparam \LEDG[5]~output .bus_hold = "false";
defparam \LEDG[5]~output .open_drain_output = "false";
// synopsys translate_on

cycloneive_io_obuf \LEDG[6]~output (
	.i(gnd),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\LEDG[6]~output_o ),
	.obar());
// synopsys translate_off
defparam \LEDG[6]~output .bus_hold = "false";
defparam \LEDG[6]~output .open_drain_output = "false";
// synopsys translate_on

cycloneive_io_obuf \LEDG[7]~output (
	.i(gnd),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\LEDG[7]~output_o ),
	.obar());
// synopsys translate_off
defparam \LEDG[7]~output .bus_hold = "false";
defparam \LEDG[7]~output .open_drain_output = "false";
// synopsys translate_on

cycloneive_io_obuf \LEDG[8]~output (
	.i(gnd),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\LEDG[8]~output_o ),
	.obar());
// synopsys translate_off
defparam \LEDG[8]~output .bus_hold = "false";
defparam \LEDG[8]~output .open_drain_output = "false";
// synopsys translate_on

cycloneive_io_obuf \HEX0[0]~output (
	.i(\display0|rascSaida7seg[0]~0_combout ),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\HEX0[0]~output_o ),
	.obar());
// synopsys translate_off
defparam \HEX0[0]~output .bus_hold = "false";
defparam \HEX0[0]~output .open_drain_output = "false";
// synopsys translate_on

cycloneive_io_obuf \HEX0[1]~output (
	.i(\display0|rascSaida7seg[1]~1_combout ),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\HEX0[1]~output_o ),
	.obar());
// synopsys translate_off
defparam \HEX0[1]~output .bus_hold = "false";
defparam \HEX0[1]~output .open_drain_output = "false";
// synopsys translate_on

cycloneive_io_obuf \HEX0[2]~output (
	.i(\display0|rascSaida7seg[2]~2_combout ),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\HEX0[2]~output_o ),
	.obar());
// synopsys translate_off
defparam \HEX0[2]~output .bus_hold = "false";
defparam \HEX0[2]~output .open_drain_output = "false";
// synopsys translate_on

cycloneive_io_obuf \HEX0[3]~output (
	.i(\display0|rascSaida7seg[3]~3_combout ),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\HEX0[3]~output_o ),
	.obar());
// synopsys translate_off
defparam \HEX0[3]~output .bus_hold = "false";
defparam \HEX0[3]~output .open_drain_output = "false";
// synopsys translate_on

cycloneive_io_obuf \HEX0[4]~output (
	.i(\display0|rascSaida7seg[4]~4_combout ),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\HEX0[4]~output_o ),
	.obar());
// synopsys translate_off
defparam \HEX0[4]~output .bus_hold = "false";
defparam \HEX0[4]~output .open_drain_output = "false";
// synopsys translate_on

cycloneive_io_obuf \HEX0[5]~output (
	.i(\display0|rascSaida7seg[5]~5_combout ),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\HEX0[5]~output_o ),
	.obar());
// synopsys translate_off
defparam \HEX0[5]~output .bus_hold = "false";
defparam \HEX0[5]~output .open_drain_output = "false";
// synopsys translate_on

cycloneive_io_obuf \HEX0[6]~output (
	.i(\display0|rascSaida7seg[6]~6_combout ),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\HEX0[6]~output_o ),
	.obar());
// synopsys translate_off
defparam \HEX0[6]~output .bus_hold = "false";
defparam \HEX0[6]~output .open_drain_output = "false";
// synopsys translate_on

cycloneive_io_obuf \HEX1[0]~output (
	.i(gnd),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\HEX1[0]~output_o ),
	.obar());
// synopsys translate_off
defparam \HEX1[0]~output .bus_hold = "false";
defparam \HEX1[0]~output .open_drain_output = "false";
// synopsys translate_on

cycloneive_io_obuf \HEX1[1]~output (
	.i(gnd),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\HEX1[1]~output_o ),
	.obar());
// synopsys translate_off
defparam \HEX1[1]~output .bus_hold = "false";
defparam \HEX1[1]~output .open_drain_output = "false";
// synopsys translate_on

cycloneive_io_obuf \HEX1[2]~output (
	.i(gnd),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\HEX1[2]~output_o ),
	.obar());
// synopsys translate_off
defparam \HEX1[2]~output .bus_hold = "false";
defparam \HEX1[2]~output .open_drain_output = "false";
// synopsys translate_on

cycloneive_io_obuf \HEX1[3]~output (
	.i(gnd),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\HEX1[3]~output_o ),
	.obar());
// synopsys translate_off
defparam \HEX1[3]~output .bus_hold = "false";
defparam \HEX1[3]~output .open_drain_output = "false";
// synopsys translate_on

cycloneive_io_obuf \HEX1[4]~output (
	.i(gnd),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\HEX1[4]~output_o ),
	.obar());
// synopsys translate_off
defparam \HEX1[4]~output .bus_hold = "false";
defparam \HEX1[4]~output .open_drain_output = "false";
// synopsys translate_on

cycloneive_io_obuf \HEX1[5]~output (
	.i(gnd),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\HEX1[5]~output_o ),
	.obar());
// synopsys translate_off
defparam \HEX1[5]~output .bus_hold = "false";
defparam \HEX1[5]~output .open_drain_output = "false";
// synopsys translate_on

cycloneive_io_obuf \HEX1[6]~output (
	.i(vcc),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\HEX1[6]~output_o ),
	.obar());
// synopsys translate_off
defparam \HEX1[6]~output .bus_hold = "false";
defparam \HEX1[6]~output .open_drain_output = "false";
// synopsys translate_on

cycloneive_io_obuf \HEX2[0]~output (
	.i(gnd),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\HEX2[0]~output_o ),
	.obar());
// synopsys translate_off
defparam \HEX2[0]~output .bus_hold = "false";
defparam \HEX2[0]~output .open_drain_output = "false";
// synopsys translate_on

cycloneive_io_obuf \HEX2[1]~output (
	.i(gnd),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\HEX2[1]~output_o ),
	.obar());
// synopsys translate_off
defparam \HEX2[1]~output .bus_hold = "false";
defparam \HEX2[1]~output .open_drain_output = "false";
// synopsys translate_on

cycloneive_io_obuf \HEX2[2]~output (
	.i(gnd),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\HEX2[2]~output_o ),
	.obar());
// synopsys translate_off
defparam \HEX2[2]~output .bus_hold = "false";
defparam \HEX2[2]~output .open_drain_output = "false";
// synopsys translate_on

cycloneive_io_obuf \HEX2[3]~output (
	.i(gnd),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\HEX2[3]~output_o ),
	.obar());
// synopsys translate_off
defparam \HEX2[3]~output .bus_hold = "false";
defparam \HEX2[3]~output .open_drain_output = "false";
// synopsys translate_on

cycloneive_io_obuf \HEX2[4]~output (
	.i(gnd),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\HEX2[4]~output_o ),
	.obar());
// synopsys translate_off
defparam \HEX2[4]~output .bus_hold = "false";
defparam \HEX2[4]~output .open_drain_output = "false";
// synopsys translate_on

cycloneive_io_obuf \HEX2[5]~output (
	.i(gnd),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\HEX2[5]~output_o ),
	.obar());
// synopsys translate_off
defparam \HEX2[5]~output .bus_hold = "false";
defparam \HEX2[5]~output .open_drain_output = "false";
// synopsys translate_on

cycloneive_io_obuf \HEX2[6]~output (
	.i(vcc),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\HEX2[6]~output_o ),
	.obar());
// synopsys translate_off
defparam \HEX2[6]~output .bus_hold = "false";
defparam \HEX2[6]~output .open_drain_output = "false";
// synopsys translate_on

cycloneive_io_obuf \HEX3[0]~output (
	.i(gnd),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\HEX3[0]~output_o ),
	.obar());
// synopsys translate_off
defparam \HEX3[0]~output .bus_hold = "false";
defparam \HEX3[0]~output .open_drain_output = "false";
// synopsys translate_on

cycloneive_io_obuf \HEX3[1]~output (
	.i(gnd),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\HEX3[1]~output_o ),
	.obar());
// synopsys translate_off
defparam \HEX3[1]~output .bus_hold = "false";
defparam \HEX3[1]~output .open_drain_output = "false";
// synopsys translate_on

cycloneive_io_obuf \HEX3[2]~output (
	.i(gnd),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\HEX3[2]~output_o ),
	.obar());
// synopsys translate_off
defparam \HEX3[2]~output .bus_hold = "false";
defparam \HEX3[2]~output .open_drain_output = "false";
// synopsys translate_on

cycloneive_io_obuf \HEX3[3]~output (
	.i(gnd),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\HEX3[3]~output_o ),
	.obar());
// synopsys translate_off
defparam \HEX3[3]~output .bus_hold = "false";
defparam \HEX3[3]~output .open_drain_output = "false";
// synopsys translate_on

cycloneive_io_obuf \HEX3[4]~output (
	.i(gnd),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\HEX3[4]~output_o ),
	.obar());
// synopsys translate_off
defparam \HEX3[4]~output .bus_hold = "false";
defparam \HEX3[4]~output .open_drain_output = "false";
// synopsys translate_on

cycloneive_io_obuf \HEX3[5]~output (
	.i(gnd),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\HEX3[5]~output_o ),
	.obar());
// synopsys translate_off
defparam \HEX3[5]~output .bus_hold = "false";
defparam \HEX3[5]~output .open_drain_output = "false";
// synopsys translate_on

cycloneive_io_obuf \HEX3[6]~output (
	.i(vcc),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\HEX3[6]~output_o ),
	.obar());
// synopsys translate_off
defparam \HEX3[6]~output .bus_hold = "false";
defparam \HEX3[6]~output .open_drain_output = "false";
// synopsys translate_on

cycloneive_io_obuf \HEX4[0]~output (
	.i(gnd),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\HEX4[0]~output_o ),
	.obar());
// synopsys translate_off
defparam \HEX4[0]~output .bus_hold = "false";
defparam \HEX4[0]~output .open_drain_output = "false";
// synopsys translate_on

cycloneive_io_obuf \HEX4[1]~output (
	.i(gnd),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\HEX4[1]~output_o ),
	.obar());
// synopsys translate_off
defparam \HEX4[1]~output .bus_hold = "false";
defparam \HEX4[1]~output .open_drain_output = "false";
// synopsys translate_on

cycloneive_io_obuf \HEX4[2]~output (
	.i(gnd),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\HEX4[2]~output_o ),
	.obar());
// synopsys translate_off
defparam \HEX4[2]~output .bus_hold = "false";
defparam \HEX4[2]~output .open_drain_output = "false";
// synopsys translate_on

cycloneive_io_obuf \HEX4[3]~output (
	.i(gnd),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\HEX4[3]~output_o ),
	.obar());
// synopsys translate_off
defparam \HEX4[3]~output .bus_hold = "false";
defparam \HEX4[3]~output .open_drain_output = "false";
// synopsys translate_on

cycloneive_io_obuf \HEX4[4]~output (
	.i(gnd),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\HEX4[4]~output_o ),
	.obar());
// synopsys translate_off
defparam \HEX4[4]~output .bus_hold = "false";
defparam \HEX4[4]~output .open_drain_output = "false";
// synopsys translate_on

cycloneive_io_obuf \HEX4[5]~output (
	.i(gnd),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\HEX4[5]~output_o ),
	.obar());
// synopsys translate_off
defparam \HEX4[5]~output .bus_hold = "false";
defparam \HEX4[5]~output .open_drain_output = "false";
// synopsys translate_on

cycloneive_io_obuf \HEX4[6]~output (
	.i(vcc),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\HEX4[6]~output_o ),
	.obar());
// synopsys translate_off
defparam \HEX4[6]~output .bus_hold = "false";
defparam \HEX4[6]~output .open_drain_output = "false";
// synopsys translate_on

cycloneive_io_obuf \HEX5[0]~output (
	.i(gnd),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\HEX5[0]~output_o ),
	.obar());
// synopsys translate_off
defparam \HEX5[0]~output .bus_hold = "false";
defparam \HEX5[0]~output .open_drain_output = "false";
// synopsys translate_on

cycloneive_io_obuf \HEX5[1]~output (
	.i(gnd),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\HEX5[1]~output_o ),
	.obar());
// synopsys translate_off
defparam \HEX5[1]~output .bus_hold = "false";
defparam \HEX5[1]~output .open_drain_output = "false";
// synopsys translate_on

cycloneive_io_obuf \HEX5[2]~output (
	.i(gnd),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\HEX5[2]~output_o ),
	.obar());
// synopsys translate_off
defparam \HEX5[2]~output .bus_hold = "false";
defparam \HEX5[2]~output .open_drain_output = "false";
// synopsys translate_on

cycloneive_io_obuf \HEX5[3]~output (
	.i(gnd),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\HEX5[3]~output_o ),
	.obar());
// synopsys translate_off
defparam \HEX5[3]~output .bus_hold = "false";
defparam \HEX5[3]~output .open_drain_output = "false";
// synopsys translate_on

cycloneive_io_obuf \HEX5[4]~output (
	.i(gnd),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\HEX5[4]~output_o ),
	.obar());
// synopsys translate_off
defparam \HEX5[4]~output .bus_hold = "false";
defparam \HEX5[4]~output .open_drain_output = "false";
// synopsys translate_on

cycloneive_io_obuf \HEX5[5]~output (
	.i(gnd),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\HEX5[5]~output_o ),
	.obar());
// synopsys translate_off
defparam \HEX5[5]~output .bus_hold = "false";
defparam \HEX5[5]~output .open_drain_output = "false";
// synopsys translate_on

cycloneive_io_obuf \HEX5[6]~output (
	.i(vcc),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\HEX5[6]~output_o ),
	.obar());
// synopsys translate_off
defparam \HEX5[6]~output .bus_hold = "false";
defparam \HEX5[6]~output .open_drain_output = "false";
// synopsys translate_on

cycloneive_io_obuf \HEX6[0]~output (
	.i(!\clk_1seg|LessThan1~7_combout ),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\HEX6[0]~output_o ),
	.obar());
// synopsys translate_off
defparam \HEX6[0]~output .bus_hold = "false";
defparam \HEX6[0]~output .open_drain_output = "false";
// synopsys translate_on

cycloneive_io_obuf \HEX6[1]~output (
	.i(gnd),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\HEX6[1]~output_o ),
	.obar());
// synopsys translate_off
defparam \HEX6[1]~output .bus_hold = "false";
defparam \HEX6[1]~output .open_drain_output = "false";
// synopsys translate_on

cycloneive_io_obuf \HEX6[2]~output (
	.i(gnd),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\HEX6[2]~output_o ),
	.obar());
// synopsys translate_off
defparam \HEX6[2]~output .bus_hold = "false";
defparam \HEX6[2]~output .open_drain_output = "false";
// synopsys translate_on

cycloneive_io_obuf \HEX6[3]~output (
	.i(!\clk_1seg|LessThan1~7_combout ),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\HEX6[3]~output_o ),
	.obar());
// synopsys translate_off
defparam \HEX6[3]~output .bus_hold = "false";
defparam \HEX6[3]~output .open_drain_output = "false";
// synopsys translate_on

cycloneive_io_obuf \HEX6[4]~output (
	.i(!\clk_1seg|LessThan1~7_combout ),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\HEX6[4]~output_o ),
	.obar());
// synopsys translate_off
defparam \HEX6[4]~output .bus_hold = "false";
defparam \HEX6[4]~output .open_drain_output = "false";
// synopsys translate_on

cycloneive_io_obuf \HEX6[5]~output (
	.i(!\clk_1seg|LessThan1~7_combout ),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\HEX6[5]~output_o ),
	.obar());
// synopsys translate_off
defparam \HEX6[5]~output .bus_hold = "false";
defparam \HEX6[5]~output .open_drain_output = "false";
// synopsys translate_on

cycloneive_io_obuf \HEX6[6]~output (
	.i(vcc),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\HEX6[6]~output_o ),
	.obar());
// synopsys translate_off
defparam \HEX6[6]~output .bus_hold = "false";
defparam \HEX6[6]~output .open_drain_output = "false";
// synopsys translate_on

cycloneive_io_obuf \HEX7[0]~output (
	.i(!\FD|Z~0_combout ),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\HEX7[0]~output_o ),
	.obar());
// synopsys translate_off
defparam \HEX7[0]~output .bus_hold = "false";
defparam \HEX7[0]~output .open_drain_output = "false";
// synopsys translate_on

cycloneive_io_obuf \HEX7[1]~output (
	.i(gnd),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\HEX7[1]~output_o ),
	.obar());
// synopsys translate_off
defparam \HEX7[1]~output .bus_hold = "false";
defparam \HEX7[1]~output .open_drain_output = "false";
// synopsys translate_on

cycloneive_io_obuf \HEX7[2]~output (
	.i(gnd),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\HEX7[2]~output_o ),
	.obar());
// synopsys translate_off
defparam \HEX7[2]~output .bus_hold = "false";
defparam \HEX7[2]~output .open_drain_output = "false";
// synopsys translate_on

cycloneive_io_obuf \HEX7[3]~output (
	.i(!\FD|Z~0_combout ),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\HEX7[3]~output_o ),
	.obar());
// synopsys translate_off
defparam \HEX7[3]~output .bus_hold = "false";
defparam \HEX7[3]~output .open_drain_output = "false";
// synopsys translate_on

cycloneive_io_obuf \HEX7[4]~output (
	.i(!\FD|Z~0_combout ),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\HEX7[4]~output_o ),
	.obar());
// synopsys translate_off
defparam \HEX7[4]~output .bus_hold = "false";
defparam \HEX7[4]~output .open_drain_output = "false";
// synopsys translate_on

cycloneive_io_obuf \HEX7[5]~output (
	.i(!\FD|Z~0_combout ),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\HEX7[5]~output_o ),
	.obar());
// synopsys translate_off
defparam \HEX7[5]~output .bus_hold = "false";
defparam \HEX7[5]~output .open_drain_output = "false";
// synopsys translate_on

cycloneive_io_obuf \HEX7[6]~output (
	.i(vcc),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\HEX7[6]~output_o ),
	.obar());
// synopsys translate_off
defparam \HEX7[6]~output .bus_hold = "false";
defparam \HEX7[6]~output .open_drain_output = "false";
// synopsys translate_on

cycloneive_io_ibuf \CLOCK_50~input (
	.i(CLOCK_50),
	.ibar(gnd),
	.o(\CLOCK_50~input_o ));
// synopsys translate_off
defparam \CLOCK_50~input .bus_hold = "false";
defparam \CLOCK_50~input .simulate_z_as = "z";
// synopsys translate_on

cycloneive_lcell_comb \FD|regUS|DOUT[0]~0 (
// Equation(s):
// \FD|regUS|DOUT[0]~0_combout  = !\FD|regUS|DOUT [0]

	.dataa(\FD|regUS|DOUT [0]),
	.datab(gnd),
	.datac(gnd),
	.datad(gnd),
	.cin(gnd),
	.combout(\FD|regUS|DOUT[0]~0_combout ),
	.cout());
// synopsys translate_off
defparam \FD|regUS|DOUT[0]~0 .lut_mask = 16'h5555;
defparam \FD|regUS|DOUT[0]~0 .sum_lutc_input = "datac";
// synopsys translate_on

dffeas \sequenciador|fstate.reset_all (
	.clk(\CLOCK_50~input_o ),
	.d(vcc),
	.asdata(vcc),
	.clrn(vcc),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(\sequenciador|fstate.reset_all~q ),
	.prn(vcc));
// synopsys translate_off
defparam \sequenciador|fstate.reset_all .is_wysiwyg = "true";
defparam \sequenciador|fstate.reset_all .power_up = "low";
// synopsys translate_on

cycloneive_lcell_comb \sequenciador|controle[15]~0 (
// Equation(s):
// \sequenciador|controle[15]~0_combout  = !\sequenciador|fstate.reset_all~q 

	.dataa(\sequenciador|fstate.reset_all~q ),
	.datab(gnd),
	.datac(gnd),
	.datad(gnd),
	.cin(gnd),
	.combout(\sequenciador|controle[15]~0_combout ),
	.cout());
// synopsys translate_off
defparam \sequenciador|controle[15]~0 .lut_mask = 16'h5555;
defparam \sequenciador|controle[15]~0 .sum_lutc_input = "datac";
// synopsys translate_on

dffeas \sequenciador|controle[15] (
	.clk(\CLOCK_50~input_o ),
	.d(\sequenciador|controle[15]~0_combout ),
	.asdata(vcc),
	.clrn(vcc),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(\sequenciador|controle [15]),
	.prn(vcc));
// synopsys translate_off
defparam \sequenciador|controle[15] .is_wysiwyg = "true";
defparam \sequenciador|controle[15] .power_up = "low";
// synopsys translate_on

cycloneive_lcell_comb \clk_1seg|counter[0]~28 (
// Equation(s):
// \clk_1seg|counter[0]~28_combout  = \clk_1seg|counter [0] $ (VCC)
// \clk_1seg|counter[0]~29  = CARRY(\clk_1seg|counter [0])

	.dataa(\clk_1seg|counter [0]),
	.datab(gnd),
	.datac(gnd),
	.datad(vcc),
	.cin(gnd),
	.combout(\clk_1seg|counter[0]~28_combout ),
	.cout(\clk_1seg|counter[0]~29 ));
// synopsys translate_off
defparam \clk_1seg|counter[0]~28 .lut_mask = 16'h55AA;
defparam \clk_1seg|counter[0]~28 .sum_lutc_input = "datac";
// synopsys translate_on

cycloneive_lcell_comb \clk_1seg|counter[23]~74 (
// Equation(s):
// \clk_1seg|counter[23]~74_combout  = (\clk_1seg|counter [23] & (!\clk_1seg|counter[22]~73 )) # (!\clk_1seg|counter [23] & ((\clk_1seg|counter[22]~73 ) # (GND)))
// \clk_1seg|counter[23]~75  = CARRY((!\clk_1seg|counter[22]~73 ) # (!\clk_1seg|counter [23]))

	.dataa(\clk_1seg|counter [23]),
	.datab(gnd),
	.datac(gnd),
	.datad(vcc),
	.cin(\clk_1seg|counter[22]~73 ),
	.combout(\clk_1seg|counter[23]~74_combout ),
	.cout(\clk_1seg|counter[23]~75 ));
// synopsys translate_off
defparam \clk_1seg|counter[23]~74 .lut_mask = 16'h5A5F;
defparam \clk_1seg|counter[23]~74 .sum_lutc_input = "cin";
// synopsys translate_on

cycloneive_lcell_comb \clk_1seg|counter[24]~76 (
// Equation(s):
// \clk_1seg|counter[24]~76_combout  = (\clk_1seg|counter [24] & (\clk_1seg|counter[23]~75  $ (GND))) # (!\clk_1seg|counter [24] & (!\clk_1seg|counter[23]~75  & VCC))
// \clk_1seg|counter[24]~77  = CARRY((\clk_1seg|counter [24] & !\clk_1seg|counter[23]~75 ))

	.dataa(\clk_1seg|counter [24]),
	.datab(gnd),
	.datac(gnd),
	.datad(vcc),
	.cin(\clk_1seg|counter[23]~75 ),
	.combout(\clk_1seg|counter[24]~76_combout ),
	.cout(\clk_1seg|counter[24]~77 ));
// synopsys translate_off
defparam \clk_1seg|counter[24]~76 .lut_mask = 16'hA50A;
defparam \clk_1seg|counter[24]~76 .sum_lutc_input = "cin";
// synopsys translate_on

dffeas \clk_1seg|counter[24] (
	.clk(\CLOCK_50~input_o ),
	.d(\clk_1seg|counter[24]~76_combout ),
	.asdata(vcc),
	.clrn(vcc),
	.aload(gnd),
	.sclr(\clk_1seg|LessThan0~3_combout ),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(\clk_1seg|counter [24]),
	.prn(vcc));
// synopsys translate_off
defparam \clk_1seg|counter[24] .is_wysiwyg = "true";
defparam \clk_1seg|counter[24] .power_up = "low";
// synopsys translate_on

cycloneive_lcell_comb \clk_1seg|counter[25]~78 (
// Equation(s):
// \clk_1seg|counter[25]~78_combout  = (\clk_1seg|counter [25] & (!\clk_1seg|counter[24]~77 )) # (!\clk_1seg|counter [25] & ((\clk_1seg|counter[24]~77 ) # (GND)))
// \clk_1seg|counter[25]~79  = CARRY((!\clk_1seg|counter[24]~77 ) # (!\clk_1seg|counter [25]))

	.dataa(\clk_1seg|counter [25]),
	.datab(gnd),
	.datac(gnd),
	.datad(vcc),
	.cin(\clk_1seg|counter[24]~77 ),
	.combout(\clk_1seg|counter[25]~78_combout ),
	.cout(\clk_1seg|counter[25]~79 ));
// synopsys translate_off
defparam \clk_1seg|counter[25]~78 .lut_mask = 16'h5A5F;
defparam \clk_1seg|counter[25]~78 .sum_lutc_input = "cin";
// synopsys translate_on

dffeas \clk_1seg|counter[25] (
	.clk(\CLOCK_50~input_o ),
	.d(\clk_1seg|counter[25]~78_combout ),
	.asdata(vcc),
	.clrn(vcc),
	.aload(gnd),
	.sclr(\clk_1seg|LessThan0~3_combout ),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(\clk_1seg|counter [25]),
	.prn(vcc));
// synopsys translate_off
defparam \clk_1seg|counter[25] .is_wysiwyg = "true";
defparam \clk_1seg|counter[25] .power_up = "low";
// synopsys translate_on

cycloneive_lcell_comb \clk_1seg|counter[26]~80 (
// Equation(s):
// \clk_1seg|counter[26]~80_combout  = (\clk_1seg|counter [26] & (\clk_1seg|counter[25]~79  $ (GND))) # (!\clk_1seg|counter [26] & (!\clk_1seg|counter[25]~79  & VCC))
// \clk_1seg|counter[26]~81  = CARRY((\clk_1seg|counter [26] & !\clk_1seg|counter[25]~79 ))

	.dataa(\clk_1seg|counter [26]),
	.datab(gnd),
	.datac(gnd),
	.datad(vcc),
	.cin(\clk_1seg|counter[25]~79 ),
	.combout(\clk_1seg|counter[26]~80_combout ),
	.cout(\clk_1seg|counter[26]~81 ));
// synopsys translate_off
defparam \clk_1seg|counter[26]~80 .lut_mask = 16'hA50A;
defparam \clk_1seg|counter[26]~80 .sum_lutc_input = "cin";
// synopsys translate_on

dffeas \clk_1seg|counter[26] (
	.clk(\CLOCK_50~input_o ),
	.d(\clk_1seg|counter[26]~80_combout ),
	.asdata(vcc),
	.clrn(vcc),
	.aload(gnd),
	.sclr(\clk_1seg|LessThan0~3_combout ),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(\clk_1seg|counter [26]),
	.prn(vcc));
// synopsys translate_off
defparam \clk_1seg|counter[26] .is_wysiwyg = "true";
defparam \clk_1seg|counter[26] .power_up = "low";
// synopsys translate_on

cycloneive_lcell_comb \clk_1seg|counter[27]~82 (
// Equation(s):
// \clk_1seg|counter[27]~82_combout  = \clk_1seg|counter [27] $ (\clk_1seg|counter[26]~81 )

	.dataa(\clk_1seg|counter [27]),
	.datab(gnd),
	.datac(gnd),
	.datad(gnd),
	.cin(\clk_1seg|counter[26]~81 ),
	.combout(\clk_1seg|counter[27]~82_combout ),
	.cout());
// synopsys translate_off
defparam \clk_1seg|counter[27]~82 .lut_mask = 16'h5A5A;
defparam \clk_1seg|counter[27]~82 .sum_lutc_input = "cin";
// synopsys translate_on

dffeas \clk_1seg|counter[27] (
	.clk(\CLOCK_50~input_o ),
	.d(\clk_1seg|counter[27]~82_combout ),
	.asdata(vcc),
	.clrn(vcc),
	.aload(gnd),
	.sclr(\clk_1seg|LessThan0~3_combout ),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(\clk_1seg|counter [27]),
	.prn(vcc));
// synopsys translate_off
defparam \clk_1seg|counter[27] .is_wysiwyg = "true";
defparam \clk_1seg|counter[27] .power_up = "low";
// synopsys translate_on

cycloneive_lcell_comb \clk_1seg|LessThan1~1 (
// Equation(s):
// \clk_1seg|LessThan1~1_combout  = (\clk_1seg|counter [19] & (\clk_1seg|counter [20] & (\clk_1seg|counter [21] & \clk_1seg|counter [22])))

	.dataa(\clk_1seg|counter [19]),
	.datab(\clk_1seg|counter [20]),
	.datac(\clk_1seg|counter [21]),
	.datad(\clk_1seg|counter [22]),
	.cin(gnd),
	.combout(\clk_1seg|LessThan1~1_combout ),
	.cout());
// synopsys translate_off
defparam \clk_1seg|LessThan1~1 .lut_mask = 16'h8000;
defparam \clk_1seg|LessThan1~1 .sum_lutc_input = "datac";
// synopsys translate_on

cycloneive_lcell_comb \clk_1seg|LessThan1~2 (
// Equation(s):
// \clk_1seg|LessThan1~2_combout  = (!\clk_1seg|counter [7] & (!\clk_1seg|counter [8] & (!\clk_1seg|counter [9] & !\clk_1seg|counter [10])))

	.dataa(\clk_1seg|counter [7]),
	.datab(\clk_1seg|counter [8]),
	.datac(\clk_1seg|counter [9]),
	.datad(\clk_1seg|counter [10]),
	.cin(gnd),
	.combout(\clk_1seg|LessThan1~2_combout ),
	.cout());
// synopsys translate_off
defparam \clk_1seg|LessThan1~2 .lut_mask = 16'h0001;
defparam \clk_1seg|LessThan1~2 .sum_lutc_input = "datac";
// synopsys translate_on

cycloneive_lcell_comb \clk_1seg|LessThan1~3 (
// Equation(s):
// \clk_1seg|LessThan1~3_combout  = (\clk_1seg|counter [12] & (\clk_1seg|counter [13] & \clk_1seg|counter [14]))

	.dataa(\clk_1seg|counter [12]),
	.datab(\clk_1seg|counter [13]),
	.datac(\clk_1seg|counter [14]),
	.datad(gnd),
	.cin(gnd),
	.combout(\clk_1seg|LessThan1~3_combout ),
	.cout());
// synopsys translate_off
defparam \clk_1seg|LessThan1~3 .lut_mask = 16'h8080;
defparam \clk_1seg|LessThan1~3 .sum_lutc_input = "datac";
// synopsys translate_on

cycloneive_lcell_comb \clk_1seg|LessThan0~0 (
// Equation(s):
// \clk_1seg|LessThan0~0_combout  = (((\clk_1seg|LessThan1~2_combout  & !\clk_1seg|counter [11])) # (!\clk_1seg|counter [15])) # (!\clk_1seg|LessThan1~3_combout )

	.dataa(\clk_1seg|LessThan1~2_combout ),
	.datab(\clk_1seg|counter [11]),
	.datac(\clk_1seg|LessThan1~3_combout ),
	.datad(\clk_1seg|counter [15]),
	.cin(gnd),
	.combout(\clk_1seg|LessThan0~0_combout ),
	.cout());
// synopsys translate_off
defparam \clk_1seg|LessThan0~0 .lut_mask = 16'h2FFF;
defparam \clk_1seg|LessThan0~0 .sum_lutc_input = "datac";
// synopsys translate_on

cycloneive_lcell_comb \clk_1seg|LessThan0~1 (
// Equation(s):
// \clk_1seg|LessThan0~1_combout  = (\clk_1seg|counter [18]) # ((\clk_1seg|counter [17] & ((\clk_1seg|counter [16]) # (!\clk_1seg|LessThan0~0_combout ))))

	.dataa(\clk_1seg|LessThan0~0_combout ),
	.datab(\clk_1seg|counter [18]),
	.datac(\clk_1seg|counter [16]),
	.datad(\clk_1seg|counter [17]),
	.cin(gnd),
	.combout(\clk_1seg|LessThan0~1_combout ),
	.cout());
// synopsys translate_off
defparam \clk_1seg|LessThan0~1 .lut_mask = 16'hFDCC;
defparam \clk_1seg|LessThan0~1 .sum_lutc_input = "datac";
// synopsys translate_on

cycloneive_lcell_comb \clk_1seg|LessThan0~2 (
// Equation(s):
// \clk_1seg|LessThan0~2_combout  = (\clk_1seg|counter [24]) # ((\clk_1seg|counter [23] & (\clk_1seg|LessThan1~1_combout  & \clk_1seg|LessThan0~1_combout )))

	.dataa(\clk_1seg|counter [24]),
	.datab(\clk_1seg|counter [23]),
	.datac(\clk_1seg|LessThan1~1_combout ),
	.datad(\clk_1seg|LessThan0~1_combout ),
	.cin(gnd),
	.combout(\clk_1seg|LessThan0~2_combout ),
	.cout());
// synopsys translate_off
defparam \clk_1seg|LessThan0~2 .lut_mask = 16'hEAAA;
defparam \clk_1seg|LessThan0~2 .sum_lutc_input = "datac";
// synopsys translate_on

cycloneive_lcell_comb \clk_1seg|LessThan0~3 (
// Equation(s):
// \clk_1seg|LessThan0~3_combout  = (\clk_1seg|counter [26]) # ((\clk_1seg|counter [27]) # ((\clk_1seg|counter [25] & \clk_1seg|LessThan0~2_combout )))

	.dataa(\clk_1seg|counter [25]),
	.datab(\clk_1seg|counter [26]),
	.datac(\clk_1seg|counter [27]),
	.datad(\clk_1seg|LessThan0~2_combout ),
	.cin(gnd),
	.combout(\clk_1seg|LessThan0~3_combout ),
	.cout());
// synopsys translate_off
defparam \clk_1seg|LessThan0~3 .lut_mask = 16'hFEFC;
defparam \clk_1seg|LessThan0~3 .sum_lutc_input = "datac";
// synopsys translate_on

dffeas \clk_1seg|counter[0] (
	.clk(\CLOCK_50~input_o ),
	.d(\clk_1seg|counter[0]~28_combout ),
	.asdata(vcc),
	.clrn(vcc),
	.aload(gnd),
	.sclr(\clk_1seg|LessThan0~3_combout ),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(\clk_1seg|counter [0]),
	.prn(vcc));
// synopsys translate_off
defparam \clk_1seg|counter[0] .is_wysiwyg = "true";
defparam \clk_1seg|counter[0] .power_up = "low";
// synopsys translate_on

cycloneive_lcell_comb \clk_1seg|counter[1]~30 (
// Equation(s):
// \clk_1seg|counter[1]~30_combout  = (\clk_1seg|counter [1] & (!\clk_1seg|counter[0]~29 )) # (!\clk_1seg|counter [1] & ((\clk_1seg|counter[0]~29 ) # (GND)))
// \clk_1seg|counter[1]~31  = CARRY((!\clk_1seg|counter[0]~29 ) # (!\clk_1seg|counter [1]))

	.dataa(\clk_1seg|counter [1]),
	.datab(gnd),
	.datac(gnd),
	.datad(vcc),
	.cin(\clk_1seg|counter[0]~29 ),
	.combout(\clk_1seg|counter[1]~30_combout ),
	.cout(\clk_1seg|counter[1]~31 ));
// synopsys translate_off
defparam \clk_1seg|counter[1]~30 .lut_mask = 16'h5A5F;
defparam \clk_1seg|counter[1]~30 .sum_lutc_input = "cin";
// synopsys translate_on

dffeas \clk_1seg|counter[1] (
	.clk(\CLOCK_50~input_o ),
	.d(\clk_1seg|counter[1]~30_combout ),
	.asdata(vcc),
	.clrn(vcc),
	.aload(gnd),
	.sclr(\clk_1seg|LessThan0~3_combout ),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(\clk_1seg|counter [1]),
	.prn(vcc));
// synopsys translate_off
defparam \clk_1seg|counter[1] .is_wysiwyg = "true";
defparam \clk_1seg|counter[1] .power_up = "low";
// synopsys translate_on

cycloneive_lcell_comb \clk_1seg|counter[2]~32 (
// Equation(s):
// \clk_1seg|counter[2]~32_combout  = (\clk_1seg|counter [2] & (\clk_1seg|counter[1]~31  $ (GND))) # (!\clk_1seg|counter [2] & (!\clk_1seg|counter[1]~31  & VCC))
// \clk_1seg|counter[2]~33  = CARRY((\clk_1seg|counter [2] & !\clk_1seg|counter[1]~31 ))

	.dataa(\clk_1seg|counter [2]),
	.datab(gnd),
	.datac(gnd),
	.datad(vcc),
	.cin(\clk_1seg|counter[1]~31 ),
	.combout(\clk_1seg|counter[2]~32_combout ),
	.cout(\clk_1seg|counter[2]~33 ));
// synopsys translate_off
defparam \clk_1seg|counter[2]~32 .lut_mask = 16'hA50A;
defparam \clk_1seg|counter[2]~32 .sum_lutc_input = "cin";
// synopsys translate_on

dffeas \clk_1seg|counter[2] (
	.clk(\CLOCK_50~input_o ),
	.d(\clk_1seg|counter[2]~32_combout ),
	.asdata(vcc),
	.clrn(vcc),
	.aload(gnd),
	.sclr(\clk_1seg|LessThan0~3_combout ),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(\clk_1seg|counter [2]),
	.prn(vcc));
// synopsys translate_off
defparam \clk_1seg|counter[2] .is_wysiwyg = "true";
defparam \clk_1seg|counter[2] .power_up = "low";
// synopsys translate_on

cycloneive_lcell_comb \clk_1seg|counter[3]~34 (
// Equation(s):
// \clk_1seg|counter[3]~34_combout  = (\clk_1seg|counter [3] & (!\clk_1seg|counter[2]~33 )) # (!\clk_1seg|counter [3] & ((\clk_1seg|counter[2]~33 ) # (GND)))
// \clk_1seg|counter[3]~35  = CARRY((!\clk_1seg|counter[2]~33 ) # (!\clk_1seg|counter [3]))

	.dataa(\clk_1seg|counter [3]),
	.datab(gnd),
	.datac(gnd),
	.datad(vcc),
	.cin(\clk_1seg|counter[2]~33 ),
	.combout(\clk_1seg|counter[3]~34_combout ),
	.cout(\clk_1seg|counter[3]~35 ));
// synopsys translate_off
defparam \clk_1seg|counter[3]~34 .lut_mask = 16'h5A5F;
defparam \clk_1seg|counter[3]~34 .sum_lutc_input = "cin";
// synopsys translate_on

dffeas \clk_1seg|counter[3] (
	.clk(\CLOCK_50~input_o ),
	.d(\clk_1seg|counter[3]~34_combout ),
	.asdata(vcc),
	.clrn(vcc),
	.aload(gnd),
	.sclr(\clk_1seg|LessThan0~3_combout ),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(\clk_1seg|counter [3]),
	.prn(vcc));
// synopsys translate_off
defparam \clk_1seg|counter[3] .is_wysiwyg = "true";
defparam \clk_1seg|counter[3] .power_up = "low";
// synopsys translate_on

cycloneive_lcell_comb \clk_1seg|counter[4]~36 (
// Equation(s):
// \clk_1seg|counter[4]~36_combout  = (\clk_1seg|counter [4] & (\clk_1seg|counter[3]~35  $ (GND))) # (!\clk_1seg|counter [4] & (!\clk_1seg|counter[3]~35  & VCC))
// \clk_1seg|counter[4]~37  = CARRY((\clk_1seg|counter [4] & !\clk_1seg|counter[3]~35 ))

	.dataa(\clk_1seg|counter [4]),
	.datab(gnd),
	.datac(gnd),
	.datad(vcc),
	.cin(\clk_1seg|counter[3]~35 ),
	.combout(\clk_1seg|counter[4]~36_combout ),
	.cout(\clk_1seg|counter[4]~37 ));
// synopsys translate_off
defparam \clk_1seg|counter[4]~36 .lut_mask = 16'hA50A;
defparam \clk_1seg|counter[4]~36 .sum_lutc_input = "cin";
// synopsys translate_on

dffeas \clk_1seg|counter[4] (
	.clk(\CLOCK_50~input_o ),
	.d(\clk_1seg|counter[4]~36_combout ),
	.asdata(vcc),
	.clrn(vcc),
	.aload(gnd),
	.sclr(\clk_1seg|LessThan0~3_combout ),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(\clk_1seg|counter [4]),
	.prn(vcc));
// synopsys translate_off
defparam \clk_1seg|counter[4] .is_wysiwyg = "true";
defparam \clk_1seg|counter[4] .power_up = "low";
// synopsys translate_on

cycloneive_lcell_comb \clk_1seg|counter[5]~38 (
// Equation(s):
// \clk_1seg|counter[5]~38_combout  = (\clk_1seg|counter [5] & (!\clk_1seg|counter[4]~37 )) # (!\clk_1seg|counter [5] & ((\clk_1seg|counter[4]~37 ) # (GND)))
// \clk_1seg|counter[5]~39  = CARRY((!\clk_1seg|counter[4]~37 ) # (!\clk_1seg|counter [5]))

	.dataa(\clk_1seg|counter [5]),
	.datab(gnd),
	.datac(gnd),
	.datad(vcc),
	.cin(\clk_1seg|counter[4]~37 ),
	.combout(\clk_1seg|counter[5]~38_combout ),
	.cout(\clk_1seg|counter[5]~39 ));
// synopsys translate_off
defparam \clk_1seg|counter[5]~38 .lut_mask = 16'h5A5F;
defparam \clk_1seg|counter[5]~38 .sum_lutc_input = "cin";
// synopsys translate_on

dffeas \clk_1seg|counter[5] (
	.clk(\CLOCK_50~input_o ),
	.d(\clk_1seg|counter[5]~38_combout ),
	.asdata(vcc),
	.clrn(vcc),
	.aload(gnd),
	.sclr(\clk_1seg|LessThan0~3_combout ),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(\clk_1seg|counter [5]),
	.prn(vcc));
// synopsys translate_off
defparam \clk_1seg|counter[5] .is_wysiwyg = "true";
defparam \clk_1seg|counter[5] .power_up = "low";
// synopsys translate_on

cycloneive_lcell_comb \clk_1seg|counter[6]~40 (
// Equation(s):
// \clk_1seg|counter[6]~40_combout  = (\clk_1seg|counter [6] & (\clk_1seg|counter[5]~39  $ (GND))) # (!\clk_1seg|counter [6] & (!\clk_1seg|counter[5]~39  & VCC))
// \clk_1seg|counter[6]~41  = CARRY((\clk_1seg|counter [6] & !\clk_1seg|counter[5]~39 ))

	.dataa(\clk_1seg|counter [6]),
	.datab(gnd),
	.datac(gnd),
	.datad(vcc),
	.cin(\clk_1seg|counter[5]~39 ),
	.combout(\clk_1seg|counter[6]~40_combout ),
	.cout(\clk_1seg|counter[6]~41 ));
// synopsys translate_off
defparam \clk_1seg|counter[6]~40 .lut_mask = 16'hA50A;
defparam \clk_1seg|counter[6]~40 .sum_lutc_input = "cin";
// synopsys translate_on

dffeas \clk_1seg|counter[6] (
	.clk(\CLOCK_50~input_o ),
	.d(\clk_1seg|counter[6]~40_combout ),
	.asdata(vcc),
	.clrn(vcc),
	.aload(gnd),
	.sclr(\clk_1seg|LessThan0~3_combout ),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(\clk_1seg|counter [6]),
	.prn(vcc));
// synopsys translate_off
defparam \clk_1seg|counter[6] .is_wysiwyg = "true";
defparam \clk_1seg|counter[6] .power_up = "low";
// synopsys translate_on

cycloneive_lcell_comb \clk_1seg|counter[7]~42 (
// Equation(s):
// \clk_1seg|counter[7]~42_combout  = (\clk_1seg|counter [7] & (!\clk_1seg|counter[6]~41 )) # (!\clk_1seg|counter [7] & ((\clk_1seg|counter[6]~41 ) # (GND)))
// \clk_1seg|counter[7]~43  = CARRY((!\clk_1seg|counter[6]~41 ) # (!\clk_1seg|counter [7]))

	.dataa(\clk_1seg|counter [7]),
	.datab(gnd),
	.datac(gnd),
	.datad(vcc),
	.cin(\clk_1seg|counter[6]~41 ),
	.combout(\clk_1seg|counter[7]~42_combout ),
	.cout(\clk_1seg|counter[7]~43 ));
// synopsys translate_off
defparam \clk_1seg|counter[7]~42 .lut_mask = 16'h5A5F;
defparam \clk_1seg|counter[7]~42 .sum_lutc_input = "cin";
// synopsys translate_on

dffeas \clk_1seg|counter[7] (
	.clk(\CLOCK_50~input_o ),
	.d(\clk_1seg|counter[7]~42_combout ),
	.asdata(vcc),
	.clrn(vcc),
	.aload(gnd),
	.sclr(\clk_1seg|LessThan0~3_combout ),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(\clk_1seg|counter [7]),
	.prn(vcc));
// synopsys translate_off
defparam \clk_1seg|counter[7] .is_wysiwyg = "true";
defparam \clk_1seg|counter[7] .power_up = "low";
// synopsys translate_on

cycloneive_lcell_comb \clk_1seg|counter[8]~44 (
// Equation(s):
// \clk_1seg|counter[8]~44_combout  = (\clk_1seg|counter [8] & (\clk_1seg|counter[7]~43  $ (GND))) # (!\clk_1seg|counter [8] & (!\clk_1seg|counter[7]~43  & VCC))
// \clk_1seg|counter[8]~45  = CARRY((\clk_1seg|counter [8] & !\clk_1seg|counter[7]~43 ))

	.dataa(\clk_1seg|counter [8]),
	.datab(gnd),
	.datac(gnd),
	.datad(vcc),
	.cin(\clk_1seg|counter[7]~43 ),
	.combout(\clk_1seg|counter[8]~44_combout ),
	.cout(\clk_1seg|counter[8]~45 ));
// synopsys translate_off
defparam \clk_1seg|counter[8]~44 .lut_mask = 16'hA50A;
defparam \clk_1seg|counter[8]~44 .sum_lutc_input = "cin";
// synopsys translate_on

dffeas \clk_1seg|counter[8] (
	.clk(\CLOCK_50~input_o ),
	.d(\clk_1seg|counter[8]~44_combout ),
	.asdata(vcc),
	.clrn(vcc),
	.aload(gnd),
	.sclr(\clk_1seg|LessThan0~3_combout ),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(\clk_1seg|counter [8]),
	.prn(vcc));
// synopsys translate_off
defparam \clk_1seg|counter[8] .is_wysiwyg = "true";
defparam \clk_1seg|counter[8] .power_up = "low";
// synopsys translate_on

cycloneive_lcell_comb \clk_1seg|counter[9]~46 (
// Equation(s):
// \clk_1seg|counter[9]~46_combout  = (\clk_1seg|counter [9] & (!\clk_1seg|counter[8]~45 )) # (!\clk_1seg|counter [9] & ((\clk_1seg|counter[8]~45 ) # (GND)))
// \clk_1seg|counter[9]~47  = CARRY((!\clk_1seg|counter[8]~45 ) # (!\clk_1seg|counter [9]))

	.dataa(\clk_1seg|counter [9]),
	.datab(gnd),
	.datac(gnd),
	.datad(vcc),
	.cin(\clk_1seg|counter[8]~45 ),
	.combout(\clk_1seg|counter[9]~46_combout ),
	.cout(\clk_1seg|counter[9]~47 ));
// synopsys translate_off
defparam \clk_1seg|counter[9]~46 .lut_mask = 16'h5A5F;
defparam \clk_1seg|counter[9]~46 .sum_lutc_input = "cin";
// synopsys translate_on

dffeas \clk_1seg|counter[9] (
	.clk(\CLOCK_50~input_o ),
	.d(\clk_1seg|counter[9]~46_combout ),
	.asdata(vcc),
	.clrn(vcc),
	.aload(gnd),
	.sclr(\clk_1seg|LessThan0~3_combout ),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(\clk_1seg|counter [9]),
	.prn(vcc));
// synopsys translate_off
defparam \clk_1seg|counter[9] .is_wysiwyg = "true";
defparam \clk_1seg|counter[9] .power_up = "low";
// synopsys translate_on

cycloneive_lcell_comb \clk_1seg|counter[10]~48 (
// Equation(s):
// \clk_1seg|counter[10]~48_combout  = (\clk_1seg|counter [10] & (\clk_1seg|counter[9]~47  $ (GND))) # (!\clk_1seg|counter [10] & (!\clk_1seg|counter[9]~47  & VCC))
// \clk_1seg|counter[10]~49  = CARRY((\clk_1seg|counter [10] & !\clk_1seg|counter[9]~47 ))

	.dataa(\clk_1seg|counter [10]),
	.datab(gnd),
	.datac(gnd),
	.datad(vcc),
	.cin(\clk_1seg|counter[9]~47 ),
	.combout(\clk_1seg|counter[10]~48_combout ),
	.cout(\clk_1seg|counter[10]~49 ));
// synopsys translate_off
defparam \clk_1seg|counter[10]~48 .lut_mask = 16'hA50A;
defparam \clk_1seg|counter[10]~48 .sum_lutc_input = "cin";
// synopsys translate_on

dffeas \clk_1seg|counter[10] (
	.clk(\CLOCK_50~input_o ),
	.d(\clk_1seg|counter[10]~48_combout ),
	.asdata(vcc),
	.clrn(vcc),
	.aload(gnd),
	.sclr(\clk_1seg|LessThan0~3_combout ),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(\clk_1seg|counter [10]),
	.prn(vcc));
// synopsys translate_off
defparam \clk_1seg|counter[10] .is_wysiwyg = "true";
defparam \clk_1seg|counter[10] .power_up = "low";
// synopsys translate_on

cycloneive_lcell_comb \clk_1seg|counter[11]~50 (
// Equation(s):
// \clk_1seg|counter[11]~50_combout  = (\clk_1seg|counter [11] & (!\clk_1seg|counter[10]~49 )) # (!\clk_1seg|counter [11] & ((\clk_1seg|counter[10]~49 ) # (GND)))
// \clk_1seg|counter[11]~51  = CARRY((!\clk_1seg|counter[10]~49 ) # (!\clk_1seg|counter [11]))

	.dataa(\clk_1seg|counter [11]),
	.datab(gnd),
	.datac(gnd),
	.datad(vcc),
	.cin(\clk_1seg|counter[10]~49 ),
	.combout(\clk_1seg|counter[11]~50_combout ),
	.cout(\clk_1seg|counter[11]~51 ));
// synopsys translate_off
defparam \clk_1seg|counter[11]~50 .lut_mask = 16'h5A5F;
defparam \clk_1seg|counter[11]~50 .sum_lutc_input = "cin";
// synopsys translate_on

dffeas \clk_1seg|counter[11] (
	.clk(\CLOCK_50~input_o ),
	.d(\clk_1seg|counter[11]~50_combout ),
	.asdata(vcc),
	.clrn(vcc),
	.aload(gnd),
	.sclr(\clk_1seg|LessThan0~3_combout ),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(\clk_1seg|counter [11]),
	.prn(vcc));
// synopsys translate_off
defparam \clk_1seg|counter[11] .is_wysiwyg = "true";
defparam \clk_1seg|counter[11] .power_up = "low";
// synopsys translate_on

cycloneive_lcell_comb \clk_1seg|counter[12]~52 (
// Equation(s):
// \clk_1seg|counter[12]~52_combout  = (\clk_1seg|counter [12] & (\clk_1seg|counter[11]~51  $ (GND))) # (!\clk_1seg|counter [12] & (!\clk_1seg|counter[11]~51  & VCC))
// \clk_1seg|counter[12]~53  = CARRY((\clk_1seg|counter [12] & !\clk_1seg|counter[11]~51 ))

	.dataa(\clk_1seg|counter [12]),
	.datab(gnd),
	.datac(gnd),
	.datad(vcc),
	.cin(\clk_1seg|counter[11]~51 ),
	.combout(\clk_1seg|counter[12]~52_combout ),
	.cout(\clk_1seg|counter[12]~53 ));
// synopsys translate_off
defparam \clk_1seg|counter[12]~52 .lut_mask = 16'hA50A;
defparam \clk_1seg|counter[12]~52 .sum_lutc_input = "cin";
// synopsys translate_on

dffeas \clk_1seg|counter[12] (
	.clk(\CLOCK_50~input_o ),
	.d(\clk_1seg|counter[12]~52_combout ),
	.asdata(vcc),
	.clrn(vcc),
	.aload(gnd),
	.sclr(\clk_1seg|LessThan0~3_combout ),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(\clk_1seg|counter [12]),
	.prn(vcc));
// synopsys translate_off
defparam \clk_1seg|counter[12] .is_wysiwyg = "true";
defparam \clk_1seg|counter[12] .power_up = "low";
// synopsys translate_on

cycloneive_lcell_comb \clk_1seg|counter[13]~54 (
// Equation(s):
// \clk_1seg|counter[13]~54_combout  = (\clk_1seg|counter [13] & (!\clk_1seg|counter[12]~53 )) # (!\clk_1seg|counter [13] & ((\clk_1seg|counter[12]~53 ) # (GND)))
// \clk_1seg|counter[13]~55  = CARRY((!\clk_1seg|counter[12]~53 ) # (!\clk_1seg|counter [13]))

	.dataa(\clk_1seg|counter [13]),
	.datab(gnd),
	.datac(gnd),
	.datad(vcc),
	.cin(\clk_1seg|counter[12]~53 ),
	.combout(\clk_1seg|counter[13]~54_combout ),
	.cout(\clk_1seg|counter[13]~55 ));
// synopsys translate_off
defparam \clk_1seg|counter[13]~54 .lut_mask = 16'h5A5F;
defparam \clk_1seg|counter[13]~54 .sum_lutc_input = "cin";
// synopsys translate_on

dffeas \clk_1seg|counter[13] (
	.clk(\CLOCK_50~input_o ),
	.d(\clk_1seg|counter[13]~54_combout ),
	.asdata(vcc),
	.clrn(vcc),
	.aload(gnd),
	.sclr(\clk_1seg|LessThan0~3_combout ),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(\clk_1seg|counter [13]),
	.prn(vcc));
// synopsys translate_off
defparam \clk_1seg|counter[13] .is_wysiwyg = "true";
defparam \clk_1seg|counter[13] .power_up = "low";
// synopsys translate_on

cycloneive_lcell_comb \clk_1seg|counter[14]~56 (
// Equation(s):
// \clk_1seg|counter[14]~56_combout  = (\clk_1seg|counter [14] & (\clk_1seg|counter[13]~55  $ (GND))) # (!\clk_1seg|counter [14] & (!\clk_1seg|counter[13]~55  & VCC))
// \clk_1seg|counter[14]~57  = CARRY((\clk_1seg|counter [14] & !\clk_1seg|counter[13]~55 ))

	.dataa(\clk_1seg|counter [14]),
	.datab(gnd),
	.datac(gnd),
	.datad(vcc),
	.cin(\clk_1seg|counter[13]~55 ),
	.combout(\clk_1seg|counter[14]~56_combout ),
	.cout(\clk_1seg|counter[14]~57 ));
// synopsys translate_off
defparam \clk_1seg|counter[14]~56 .lut_mask = 16'hA50A;
defparam \clk_1seg|counter[14]~56 .sum_lutc_input = "cin";
// synopsys translate_on

dffeas \clk_1seg|counter[14] (
	.clk(\CLOCK_50~input_o ),
	.d(\clk_1seg|counter[14]~56_combout ),
	.asdata(vcc),
	.clrn(vcc),
	.aload(gnd),
	.sclr(\clk_1seg|LessThan0~3_combout ),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(\clk_1seg|counter [14]),
	.prn(vcc));
// synopsys translate_off
defparam \clk_1seg|counter[14] .is_wysiwyg = "true";
defparam \clk_1seg|counter[14] .power_up = "low";
// synopsys translate_on

cycloneive_lcell_comb \clk_1seg|counter[15]~58 (
// Equation(s):
// \clk_1seg|counter[15]~58_combout  = (\clk_1seg|counter [15] & (!\clk_1seg|counter[14]~57 )) # (!\clk_1seg|counter [15] & ((\clk_1seg|counter[14]~57 ) # (GND)))
// \clk_1seg|counter[15]~59  = CARRY((!\clk_1seg|counter[14]~57 ) # (!\clk_1seg|counter [15]))

	.dataa(\clk_1seg|counter [15]),
	.datab(gnd),
	.datac(gnd),
	.datad(vcc),
	.cin(\clk_1seg|counter[14]~57 ),
	.combout(\clk_1seg|counter[15]~58_combout ),
	.cout(\clk_1seg|counter[15]~59 ));
// synopsys translate_off
defparam \clk_1seg|counter[15]~58 .lut_mask = 16'h5A5F;
defparam \clk_1seg|counter[15]~58 .sum_lutc_input = "cin";
// synopsys translate_on

dffeas \clk_1seg|counter[15] (
	.clk(\CLOCK_50~input_o ),
	.d(\clk_1seg|counter[15]~58_combout ),
	.asdata(vcc),
	.clrn(vcc),
	.aload(gnd),
	.sclr(\clk_1seg|LessThan0~3_combout ),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(\clk_1seg|counter [15]),
	.prn(vcc));
// synopsys translate_off
defparam \clk_1seg|counter[15] .is_wysiwyg = "true";
defparam \clk_1seg|counter[15] .power_up = "low";
// synopsys translate_on

cycloneive_lcell_comb \clk_1seg|counter[16]~60 (
// Equation(s):
// \clk_1seg|counter[16]~60_combout  = (\clk_1seg|counter [16] & (\clk_1seg|counter[15]~59  $ (GND))) # (!\clk_1seg|counter [16] & (!\clk_1seg|counter[15]~59  & VCC))
// \clk_1seg|counter[16]~61  = CARRY((\clk_1seg|counter [16] & !\clk_1seg|counter[15]~59 ))

	.dataa(\clk_1seg|counter [16]),
	.datab(gnd),
	.datac(gnd),
	.datad(vcc),
	.cin(\clk_1seg|counter[15]~59 ),
	.combout(\clk_1seg|counter[16]~60_combout ),
	.cout(\clk_1seg|counter[16]~61 ));
// synopsys translate_off
defparam \clk_1seg|counter[16]~60 .lut_mask = 16'hA50A;
defparam \clk_1seg|counter[16]~60 .sum_lutc_input = "cin";
// synopsys translate_on

dffeas \clk_1seg|counter[16] (
	.clk(\CLOCK_50~input_o ),
	.d(\clk_1seg|counter[16]~60_combout ),
	.asdata(vcc),
	.clrn(vcc),
	.aload(gnd),
	.sclr(\clk_1seg|LessThan0~3_combout ),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(\clk_1seg|counter [16]),
	.prn(vcc));
// synopsys translate_off
defparam \clk_1seg|counter[16] .is_wysiwyg = "true";
defparam \clk_1seg|counter[16] .power_up = "low";
// synopsys translate_on

cycloneive_lcell_comb \clk_1seg|counter[17]~62 (
// Equation(s):
// \clk_1seg|counter[17]~62_combout  = (\clk_1seg|counter [17] & (!\clk_1seg|counter[16]~61 )) # (!\clk_1seg|counter [17] & ((\clk_1seg|counter[16]~61 ) # (GND)))
// \clk_1seg|counter[17]~63  = CARRY((!\clk_1seg|counter[16]~61 ) # (!\clk_1seg|counter [17]))

	.dataa(\clk_1seg|counter [17]),
	.datab(gnd),
	.datac(gnd),
	.datad(vcc),
	.cin(\clk_1seg|counter[16]~61 ),
	.combout(\clk_1seg|counter[17]~62_combout ),
	.cout(\clk_1seg|counter[17]~63 ));
// synopsys translate_off
defparam \clk_1seg|counter[17]~62 .lut_mask = 16'h5A5F;
defparam \clk_1seg|counter[17]~62 .sum_lutc_input = "cin";
// synopsys translate_on

dffeas \clk_1seg|counter[17] (
	.clk(\CLOCK_50~input_o ),
	.d(\clk_1seg|counter[17]~62_combout ),
	.asdata(vcc),
	.clrn(vcc),
	.aload(gnd),
	.sclr(\clk_1seg|LessThan0~3_combout ),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(\clk_1seg|counter [17]),
	.prn(vcc));
// synopsys translate_off
defparam \clk_1seg|counter[17] .is_wysiwyg = "true";
defparam \clk_1seg|counter[17] .power_up = "low";
// synopsys translate_on

cycloneive_lcell_comb \clk_1seg|counter[18]~64 (
// Equation(s):
// \clk_1seg|counter[18]~64_combout  = (\clk_1seg|counter [18] & (\clk_1seg|counter[17]~63  $ (GND))) # (!\clk_1seg|counter [18] & (!\clk_1seg|counter[17]~63  & VCC))
// \clk_1seg|counter[18]~65  = CARRY((\clk_1seg|counter [18] & !\clk_1seg|counter[17]~63 ))

	.dataa(\clk_1seg|counter [18]),
	.datab(gnd),
	.datac(gnd),
	.datad(vcc),
	.cin(\clk_1seg|counter[17]~63 ),
	.combout(\clk_1seg|counter[18]~64_combout ),
	.cout(\clk_1seg|counter[18]~65 ));
// synopsys translate_off
defparam \clk_1seg|counter[18]~64 .lut_mask = 16'hA50A;
defparam \clk_1seg|counter[18]~64 .sum_lutc_input = "cin";
// synopsys translate_on

dffeas \clk_1seg|counter[18] (
	.clk(\CLOCK_50~input_o ),
	.d(\clk_1seg|counter[18]~64_combout ),
	.asdata(vcc),
	.clrn(vcc),
	.aload(gnd),
	.sclr(\clk_1seg|LessThan0~3_combout ),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(\clk_1seg|counter [18]),
	.prn(vcc));
// synopsys translate_off
defparam \clk_1seg|counter[18] .is_wysiwyg = "true";
defparam \clk_1seg|counter[18] .power_up = "low";
// synopsys translate_on

cycloneive_lcell_comb \clk_1seg|counter[19]~66 (
// Equation(s):
// \clk_1seg|counter[19]~66_combout  = (\clk_1seg|counter [19] & (!\clk_1seg|counter[18]~65 )) # (!\clk_1seg|counter [19] & ((\clk_1seg|counter[18]~65 ) # (GND)))
// \clk_1seg|counter[19]~67  = CARRY((!\clk_1seg|counter[18]~65 ) # (!\clk_1seg|counter [19]))

	.dataa(\clk_1seg|counter [19]),
	.datab(gnd),
	.datac(gnd),
	.datad(vcc),
	.cin(\clk_1seg|counter[18]~65 ),
	.combout(\clk_1seg|counter[19]~66_combout ),
	.cout(\clk_1seg|counter[19]~67 ));
// synopsys translate_off
defparam \clk_1seg|counter[19]~66 .lut_mask = 16'h5A5F;
defparam \clk_1seg|counter[19]~66 .sum_lutc_input = "cin";
// synopsys translate_on

dffeas \clk_1seg|counter[19] (
	.clk(\CLOCK_50~input_o ),
	.d(\clk_1seg|counter[19]~66_combout ),
	.asdata(vcc),
	.clrn(vcc),
	.aload(gnd),
	.sclr(\clk_1seg|LessThan0~3_combout ),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(\clk_1seg|counter [19]),
	.prn(vcc));
// synopsys translate_off
defparam \clk_1seg|counter[19] .is_wysiwyg = "true";
defparam \clk_1seg|counter[19] .power_up = "low";
// synopsys translate_on

cycloneive_lcell_comb \clk_1seg|counter[20]~68 (
// Equation(s):
// \clk_1seg|counter[20]~68_combout  = (\clk_1seg|counter [20] & (\clk_1seg|counter[19]~67  $ (GND))) # (!\clk_1seg|counter [20] & (!\clk_1seg|counter[19]~67  & VCC))
// \clk_1seg|counter[20]~69  = CARRY((\clk_1seg|counter [20] & !\clk_1seg|counter[19]~67 ))

	.dataa(\clk_1seg|counter [20]),
	.datab(gnd),
	.datac(gnd),
	.datad(vcc),
	.cin(\clk_1seg|counter[19]~67 ),
	.combout(\clk_1seg|counter[20]~68_combout ),
	.cout(\clk_1seg|counter[20]~69 ));
// synopsys translate_off
defparam \clk_1seg|counter[20]~68 .lut_mask = 16'hA50A;
defparam \clk_1seg|counter[20]~68 .sum_lutc_input = "cin";
// synopsys translate_on

dffeas \clk_1seg|counter[20] (
	.clk(\CLOCK_50~input_o ),
	.d(\clk_1seg|counter[20]~68_combout ),
	.asdata(vcc),
	.clrn(vcc),
	.aload(gnd),
	.sclr(\clk_1seg|LessThan0~3_combout ),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(\clk_1seg|counter [20]),
	.prn(vcc));
// synopsys translate_off
defparam \clk_1seg|counter[20] .is_wysiwyg = "true";
defparam \clk_1seg|counter[20] .power_up = "low";
// synopsys translate_on

cycloneive_lcell_comb \clk_1seg|counter[21]~70 (
// Equation(s):
// \clk_1seg|counter[21]~70_combout  = (\clk_1seg|counter [21] & (!\clk_1seg|counter[20]~69 )) # (!\clk_1seg|counter [21] & ((\clk_1seg|counter[20]~69 ) # (GND)))
// \clk_1seg|counter[21]~71  = CARRY((!\clk_1seg|counter[20]~69 ) # (!\clk_1seg|counter [21]))

	.dataa(\clk_1seg|counter [21]),
	.datab(gnd),
	.datac(gnd),
	.datad(vcc),
	.cin(\clk_1seg|counter[20]~69 ),
	.combout(\clk_1seg|counter[21]~70_combout ),
	.cout(\clk_1seg|counter[21]~71 ));
// synopsys translate_off
defparam \clk_1seg|counter[21]~70 .lut_mask = 16'h5A5F;
defparam \clk_1seg|counter[21]~70 .sum_lutc_input = "cin";
// synopsys translate_on

dffeas \clk_1seg|counter[21] (
	.clk(\CLOCK_50~input_o ),
	.d(\clk_1seg|counter[21]~70_combout ),
	.asdata(vcc),
	.clrn(vcc),
	.aload(gnd),
	.sclr(\clk_1seg|LessThan0~3_combout ),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(\clk_1seg|counter [21]),
	.prn(vcc));
// synopsys translate_off
defparam \clk_1seg|counter[21] .is_wysiwyg = "true";
defparam \clk_1seg|counter[21] .power_up = "low";
// synopsys translate_on

cycloneive_lcell_comb \clk_1seg|counter[22]~72 (
// Equation(s):
// \clk_1seg|counter[22]~72_combout  = (\clk_1seg|counter [22] & (\clk_1seg|counter[21]~71  $ (GND))) # (!\clk_1seg|counter [22] & (!\clk_1seg|counter[21]~71  & VCC))
// \clk_1seg|counter[22]~73  = CARRY((\clk_1seg|counter [22] & !\clk_1seg|counter[21]~71 ))

	.dataa(\clk_1seg|counter [22]),
	.datab(gnd),
	.datac(gnd),
	.datad(vcc),
	.cin(\clk_1seg|counter[21]~71 ),
	.combout(\clk_1seg|counter[22]~72_combout ),
	.cout(\clk_1seg|counter[22]~73 ));
// synopsys translate_off
defparam \clk_1seg|counter[22]~72 .lut_mask = 16'hA50A;
defparam \clk_1seg|counter[22]~72 .sum_lutc_input = "cin";
// synopsys translate_on

dffeas \clk_1seg|counter[22] (
	.clk(\CLOCK_50~input_o ),
	.d(\clk_1seg|counter[22]~72_combout ),
	.asdata(vcc),
	.clrn(vcc),
	.aload(gnd),
	.sclr(\clk_1seg|LessThan0~3_combout ),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(\clk_1seg|counter [22]),
	.prn(vcc));
// synopsys translate_off
defparam \clk_1seg|counter[22] .is_wysiwyg = "true";
defparam \clk_1seg|counter[22] .power_up = "low";
// synopsys translate_on

dffeas \clk_1seg|counter[23] (
	.clk(\CLOCK_50~input_o ),
	.d(\clk_1seg|counter[23]~74_combout ),
	.asdata(vcc),
	.clrn(vcc),
	.aload(gnd),
	.sclr(\clk_1seg|LessThan0~3_combout ),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(\clk_1seg|counter [23]),
	.prn(vcc));
// synopsys translate_off
defparam \clk_1seg|counter[23] .is_wysiwyg = "true";
defparam \clk_1seg|counter[23] .power_up = "low";
// synopsys translate_on

cycloneive_lcell_comb \clk_1seg|LessThan1~0 (
// Equation(s):
// \clk_1seg|LessThan1~0_combout  = (!\clk_1seg|counter [25] & (!\clk_1seg|counter [26] & !\clk_1seg|counter [27]))

	.dataa(gnd),
	.datab(\clk_1seg|counter [25]),
	.datac(\clk_1seg|counter [26]),
	.datad(\clk_1seg|counter [27]),
	.cin(gnd),
	.combout(\clk_1seg|LessThan1~0_combout ),
	.cout());
// synopsys translate_off
defparam \clk_1seg|LessThan1~0 .lut_mask = 16'h0003;
defparam \clk_1seg|LessThan1~0 .sum_lutc_input = "datac";
// synopsys translate_on

cycloneive_lcell_comb \clk_1seg|LessThan1~4 (
// Equation(s):
// \clk_1seg|LessThan1~4_combout  = (((\clk_1seg|LessThan1~2_combout  & !\clk_1seg|counter [6])) # (!\clk_1seg|LessThan1~3_combout )) # (!\clk_1seg|counter [11])

	.dataa(\clk_1seg|LessThan1~2_combout ),
	.datab(\clk_1seg|counter [6]),
	.datac(\clk_1seg|counter [11]),
	.datad(\clk_1seg|LessThan1~3_combout ),
	.cin(gnd),
	.combout(\clk_1seg|LessThan1~4_combout ),
	.cout());
// synopsys translate_off
defparam \clk_1seg|LessThan1~4 .lut_mask = 16'h2FFF;
defparam \clk_1seg|LessThan1~4 .sum_lutc_input = "datac";
// synopsys translate_on

cycloneive_lcell_comb \clk_1seg|LessThan1~5 (
// Equation(s):
// \clk_1seg|LessThan1~5_combout  = (\clk_1seg|counter [16] & ((\clk_1seg|counter [15]) # (!\clk_1seg|LessThan1~4_combout )))

	.dataa(\clk_1seg|counter [16]),
	.datab(\clk_1seg|counter [15]),
	.datac(\clk_1seg|LessThan1~4_combout ),
	.datad(gnd),
	.cin(gnd),
	.combout(\clk_1seg|LessThan1~5_combout ),
	.cout());
// synopsys translate_off
defparam \clk_1seg|LessThan1~5 .lut_mask = 16'h8A8A;
defparam \clk_1seg|LessThan1~5 .sum_lutc_input = "datac";
// synopsys translate_on

cycloneive_lcell_comb \clk_1seg|LessThan1~6 (
// Equation(s):
// \clk_1seg|LessThan1~6_combout  = (\clk_1seg|counter [18] & (\clk_1seg|LessThan1~1_combout  & ((\clk_1seg|counter [17]) # (\clk_1seg|LessThan1~5_combout ))))

	.dataa(\clk_1seg|counter [17]),
	.datab(\clk_1seg|counter [18]),
	.datac(\clk_1seg|LessThan1~1_combout ),
	.datad(\clk_1seg|LessThan1~5_combout ),
	.cin(gnd),
	.combout(\clk_1seg|LessThan1~6_combout ),
	.cout());
// synopsys translate_off
defparam \clk_1seg|LessThan1~6 .lut_mask = 16'hC080;
defparam \clk_1seg|LessThan1~6 .sum_lutc_input = "datac";
// synopsys translate_on

cycloneive_lcell_comb \clk_1seg|LessThan1~7 (
// Equation(s):
// \clk_1seg|LessThan1~7_combout  = (\clk_1seg|LessThan1~0_combout  & (((!\clk_1seg|counter [23] & !\clk_1seg|LessThan1~6_combout )) # (!\clk_1seg|counter [24])))

	.dataa(\clk_1seg|counter [23]),
	.datab(\clk_1seg|counter [24]),
	.datac(\clk_1seg|LessThan1~0_combout ),
	.datad(\clk_1seg|LessThan1~6_combout ),
	.cin(gnd),
	.combout(\clk_1seg|LessThan1~7_combout ),
	.cout());
// synopsys translate_off
defparam \clk_1seg|LessThan1~7 .lut_mask = 16'h3070;
defparam \clk_1seg|LessThan1~7 .sum_lutc_input = "datac";
// synopsys translate_on

cycloneive_lcell_comb \sequenciador|Selector0~0 (
// Equation(s):
// \sequenciador|Selector0~0_combout  = (\sequenciador|fstate.espera_seg~q  & !\clk_1seg|LessThan1~7_combout )

	.dataa(\sequenciador|fstate.espera_seg~q ),
	.datab(gnd),
	.datac(gnd),
	.datad(\clk_1seg|LessThan1~7_combout ),
	.cin(gnd),
	.combout(\sequenciador|Selector0~0_combout ),
	.cout());
// synopsys translate_off
defparam \sequenciador|Selector0~0 .lut_mask = 16'h00AA;
defparam \sequenciador|Selector0~0 .sum_lutc_input = "datac";
// synopsys translate_on

dffeas \sequenciador|fstate.soma_us (
	.clk(\CLOCK_50~input_o ),
	.d(\sequenciador|Selector0~0_combout ),
	.asdata(vcc),
	.clrn(vcc),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(\sequenciador|fstate.soma_us~q ),
	.prn(vcc));
// synopsys translate_off
defparam \sequenciador|fstate.soma_us .is_wysiwyg = "true";
defparam \sequenciador|fstate.soma_us .power_up = "low";
// synopsys translate_on

dffeas \sequenciador|controle[9] (
	.clk(\CLOCK_50~input_o ),
	.d(\sequenciador|fstate.soma_us~q ),
	.asdata(vcc),
	.clrn(vcc),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(\sequenciador|controle [9]),
	.prn(vcc));
// synopsys translate_off
defparam \sequenciador|controle[9] .is_wysiwyg = "true";
defparam \sequenciador|controle[9] .power_up = "low";
// synopsys translate_on

dffeas \FD|regUS|DOUT[0] (
	.clk(\CLOCK_50~input_o ),
	.d(\FD|regUS|DOUT[0]~0_combout ),
	.asdata(vcc),
	.clrn(!\sequenciador|controle [15]),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(\sequenciador|controle [9]),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(\FD|regUS|DOUT [0]),
	.prn(vcc));
// synopsys translate_off
defparam \FD|regUS|DOUT[0] .is_wysiwyg = "true";
defparam \FD|regUS|DOUT[0] .power_up = "low";
// synopsys translate_on

cycloneive_lcell_comb \FD|ULA|Add0~0 (
// Equation(s):
// \FD|ULA|Add0~0_combout  = \FD|regUS|DOUT [0] $ (\FD|regUS|DOUT [1])

	.dataa(gnd),
	.datab(gnd),
	.datac(\FD|regUS|DOUT [0]),
	.datad(\FD|regUS|DOUT [1]),
	.cin(gnd),
	.combout(\FD|ULA|Add0~0_combout ),
	.cout());
// synopsys translate_off
defparam \FD|ULA|Add0~0 .lut_mask = 16'h0FF0;
defparam \FD|ULA|Add0~0 .sum_lutc_input = "datac";
// synopsys translate_on

dffeas \FD|regUS|DOUT[1] (
	.clk(\CLOCK_50~input_o ),
	.d(\FD|ULA|Add0~0_combout ),
	.asdata(vcc),
	.clrn(!\sequenciador|controle [15]),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(\sequenciador|controle [9]),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(\FD|regUS|DOUT [1]),
	.prn(vcc));
// synopsys translate_off
defparam \FD|regUS|DOUT[1] .is_wysiwyg = "true";
defparam \FD|regUS|DOUT[1] .power_up = "low";
// synopsys translate_on

cycloneive_lcell_comb \FD|ULA|Add0~1 (
// Equation(s):
// \FD|ULA|Add0~1_combout  = \FD|regUS|DOUT [2] $ (((\FD|regUS|DOUT [0] & \FD|regUS|DOUT [1])))

	.dataa(gnd),
	.datab(\FD|regUS|DOUT [2]),
	.datac(\FD|regUS|DOUT [0]),
	.datad(\FD|regUS|DOUT [1]),
	.cin(gnd),
	.combout(\FD|ULA|Add0~1_combout ),
	.cout());
// synopsys translate_off
defparam \FD|ULA|Add0~1 .lut_mask = 16'h3CCC;
defparam \FD|ULA|Add0~1 .sum_lutc_input = "datac";
// synopsys translate_on

dffeas \FD|regUS|DOUT[2] (
	.clk(\CLOCK_50~input_o ),
	.d(\FD|ULA|Add0~1_combout ),
	.asdata(vcc),
	.clrn(!\sequenciador|controle [15]),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(\sequenciador|controle [9]),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(\FD|regUS|DOUT [2]),
	.prn(vcc));
// synopsys translate_off
defparam \FD|regUS|DOUT[2] .is_wysiwyg = "true";
defparam \FD|regUS|DOUT[2] .power_up = "low";
// synopsys translate_on

cycloneive_lcell_comb \FD|ULA|Add0~2 (
// Equation(s):
// \FD|ULA|Add0~2_combout  = \FD|regUS|DOUT [3] $ (((\FD|regUS|DOUT [0] & (\FD|regUS|DOUT [1] & \FD|regUS|DOUT [2]))))

	.dataa(\FD|regUS|DOUT [3]),
	.datab(\FD|regUS|DOUT [0]),
	.datac(\FD|regUS|DOUT [1]),
	.datad(\FD|regUS|DOUT [2]),
	.cin(gnd),
	.combout(\FD|ULA|Add0~2_combout ),
	.cout());
// synopsys translate_off
defparam \FD|ULA|Add0~2 .lut_mask = 16'h6AAA;
defparam \FD|ULA|Add0~2 .sum_lutc_input = "datac";
// synopsys translate_on

dffeas \FD|regUS|DOUT[3] (
	.clk(\CLOCK_50~input_o ),
	.d(\FD|ULA|Add0~2_combout ),
	.asdata(vcc),
	.clrn(!\sequenciador|controle [15]),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(\sequenciador|controle [9]),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(\FD|regUS|DOUT [3]),
	.prn(vcc));
// synopsys translate_off
defparam \FD|regUS|DOUT[3] .is_wysiwyg = "true";
defparam \FD|regUS|DOUT[3] .power_up = "low";
// synopsys translate_on

cycloneive_lcell_comb \FD|Z~0 (
// Equation(s):
// \FD|Z~0_combout  = (((!\FD|regUS|DOUT [3]) # (!\FD|regUS|DOUT [2])) # (!\FD|regUS|DOUT [1])) # (!\FD|regUS|DOUT [0])

	.dataa(\FD|regUS|DOUT [0]),
	.datab(\FD|regUS|DOUT [1]),
	.datac(\FD|regUS|DOUT [2]),
	.datad(\FD|regUS|DOUT [3]),
	.cin(gnd),
	.combout(\FD|Z~0_combout ),
	.cout());
// synopsys translate_off
defparam \FD|Z~0 .lut_mask = 16'h7FFF;
defparam \FD|Z~0 .sum_lutc_input = "datac";
// synopsys translate_on

cycloneive_lcell_comb \sequenciador|Selector2~0 (
// Equation(s):
// \sequenciador|Selector2~0_combout  = (\sequenciador|fstate.soma_us~q ) # ((\sequenciador|fstate.compara_us~q  & !\FD|Z~0_combout ))

	.dataa(\sequenciador|fstate.soma_us~q ),
	.datab(\sequenciador|fstate.compara_us~q ),
	.datac(gnd),
	.datad(\FD|Z~0_combout ),
	.cin(gnd),
	.combout(\sequenciador|Selector2~0_combout ),
	.cout());
// synopsys translate_off
defparam \sequenciador|Selector2~0 .lut_mask = 16'hAAEE;
defparam \sequenciador|Selector2~0 .sum_lutc_input = "datac";
// synopsys translate_on

dffeas \sequenciador|fstate.compara_us (
	.clk(\CLOCK_50~input_o ),
	.d(\sequenciador|Selector2~0_combout ),
	.asdata(vcc),
	.clrn(vcc),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(\sequenciador|fstate.compara_us~q ),
	.prn(vcc));
// synopsys translate_off
defparam \sequenciador|fstate.compara_us .is_wysiwyg = "true";
defparam \sequenciador|fstate.compara_us .power_up = "low";
// synopsys translate_on

cycloneive_lcell_comb \sequenciador|Selector1~0 (
// Equation(s):
// \sequenciador|Selector1~0_combout  = (\FD|Z~0_combout  & \sequenciador|fstate.compara_us~q )

	.dataa(\FD|Z~0_combout ),
	.datab(\sequenciador|fstate.compara_us~q ),
	.datac(gnd),
	.datad(gnd),
	.cin(gnd),
	.combout(\sequenciador|Selector1~0_combout ),
	.cout());
// synopsys translate_off
defparam \sequenciador|Selector1~0 .lut_mask = 16'h8888;
defparam \sequenciador|Selector1~0 .sum_lutc_input = "datac";
// synopsys translate_on

cycloneive_lcell_comb \sequenciador|Selector1~1 (
// Equation(s):
// \sequenciador|Selector1~1_combout  = (\sequenciador|Selector1~0_combout ) # (((\clk_1seg|LessThan1~7_combout  & \sequenciador|fstate.espera_seg~q )) # (!\sequenciador|fstate.reset_all~q ))

	.dataa(\sequenciador|Selector1~0_combout ),
	.datab(\clk_1seg|LessThan1~7_combout ),
	.datac(\sequenciador|fstate.espera_seg~q ),
	.datad(\sequenciador|fstate.reset_all~q ),
	.cin(gnd),
	.combout(\sequenciador|Selector1~1_combout ),
	.cout());
// synopsys translate_off
defparam \sequenciador|Selector1~1 .lut_mask = 16'hEAFF;
defparam \sequenciador|Selector1~1 .sum_lutc_input = "datac";
// synopsys translate_on

dffeas \sequenciador|fstate.espera_seg (
	.clk(\CLOCK_50~input_o ),
	.d(\sequenciador|Selector1~1_combout ),
	.asdata(vcc),
	.clrn(vcc),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(\sequenciador|fstate.espera_seg~q ),
	.prn(vcc));
// synopsys translate_off
defparam \sequenciador|fstate.espera_seg .is_wysiwyg = "true";
defparam \sequenciador|fstate.espera_seg .power_up = "low";
// synopsys translate_on

dffeas \sequenciador|state[0] (
	.clk(\CLOCK_50~input_o ),
	.d(\sequenciador|fstate.espera_seg~q ),
	.asdata(vcc),
	.clrn(vcc),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(\sequenciador|state [0]),
	.prn(vcc));
// synopsys translate_off
defparam \sequenciador|state[0] .is_wysiwyg = "true";
defparam \sequenciador|state[0] .power_up = "low";
// synopsys translate_on

dffeas \sequenciador|state[1] (
	.clk(\CLOCK_50~input_o ),
	.d(\sequenciador|fstate.soma_us~q ),
	.asdata(vcc),
	.clrn(vcc),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(\sequenciador|state [1]),
	.prn(vcc));
// synopsys translate_off
defparam \sequenciador|state[1] .is_wysiwyg = "true";
defparam \sequenciador|state[1] .power_up = "low";
// synopsys translate_on

cycloneive_lcell_comb \display0|rascSaida7seg[0]~0 (
// Equation(s):
// \display0|rascSaida7seg[0]~0_combout  = (\FD|regUS|DOUT [2] & (!\FD|regUS|DOUT [1] & (\FD|regUS|DOUT [0] $ (!\FD|regUS|DOUT [3])))) # (!\FD|regUS|DOUT [2] & (\FD|regUS|DOUT [0] & (\FD|regUS|DOUT [3] $ (!\FD|regUS|DOUT [1]))))

	.dataa(\FD|regUS|DOUT [2]),
	.datab(\FD|regUS|DOUT [0]),
	.datac(\FD|regUS|DOUT [3]),
	.datad(\FD|regUS|DOUT [1]),
	.cin(gnd),
	.combout(\display0|rascSaida7seg[0]~0_combout ),
	.cout());
// synopsys translate_off
defparam \display0|rascSaida7seg[0]~0 .lut_mask = 16'h4086;
defparam \display0|rascSaida7seg[0]~0 .sum_lutc_input = "datac";
// synopsys translate_on

cycloneive_lcell_comb \display0|rascSaida7seg[1]~1 (
// Equation(s):
// \display0|rascSaida7seg[1]~1_combout  = (\FD|regUS|DOUT [1] & ((\FD|regUS|DOUT [0] & (\FD|regUS|DOUT [3])) # (!\FD|regUS|DOUT [0] & ((\FD|regUS|DOUT [2]))))) # (!\FD|regUS|DOUT [1] & (\FD|regUS|DOUT [2] & (\FD|regUS|DOUT [3] $ (\FD|regUS|DOUT [0]))))

	.dataa(\FD|regUS|DOUT [1]),
	.datab(\FD|regUS|DOUT [3]),
	.datac(\FD|regUS|DOUT [2]),
	.datad(\FD|regUS|DOUT [0]),
	.cin(gnd),
	.combout(\display0|rascSaida7seg[1]~1_combout ),
	.cout());
// synopsys translate_off
defparam \display0|rascSaida7seg[1]~1 .lut_mask = 16'h98E0;
defparam \display0|rascSaida7seg[1]~1 .sum_lutc_input = "datac";
// synopsys translate_on

cycloneive_lcell_comb \display0|rascSaida7seg[2]~2 (
// Equation(s):
// \display0|rascSaida7seg[2]~2_combout  = (\FD|regUS|DOUT [2] & (\FD|regUS|DOUT [3] & ((\FD|regUS|DOUT [1]) # (!\FD|regUS|DOUT [0])))) # (!\FD|regUS|DOUT [2] & (!\FD|regUS|DOUT [3] & (\FD|regUS|DOUT [1] & !\FD|regUS|DOUT [0])))

	.dataa(\FD|regUS|DOUT [2]),
	.datab(\FD|regUS|DOUT [3]),
	.datac(\FD|regUS|DOUT [1]),
	.datad(\FD|regUS|DOUT [0]),
	.cin(gnd),
	.combout(\display0|rascSaida7seg[2]~2_combout ),
	.cout());
// synopsys translate_off
defparam \display0|rascSaida7seg[2]~2 .lut_mask = 16'h8098;
defparam \display0|rascSaida7seg[2]~2 .sum_lutc_input = "datac";
// synopsys translate_on

cycloneive_lcell_comb \display0|rascSaida7seg[3]~3 (
// Equation(s):
// \display0|rascSaida7seg[3]~3_combout  = (\FD|regUS|DOUT [1] & ((\FD|regUS|DOUT [0] & (\FD|regUS|DOUT [2])) # (!\FD|regUS|DOUT [0] & (!\FD|regUS|DOUT [2] & \FD|regUS|DOUT [3])))) # (!\FD|regUS|DOUT [1] & (!\FD|regUS|DOUT [3] & (\FD|regUS|DOUT [0] $ 
// (\FD|regUS|DOUT [2]))))

	.dataa(\FD|regUS|DOUT [0]),
	.datab(\FD|regUS|DOUT [1]),
	.datac(\FD|regUS|DOUT [2]),
	.datad(\FD|regUS|DOUT [3]),
	.cin(gnd),
	.combout(\display0|rascSaida7seg[3]~3_combout ),
	.cout());
// synopsys translate_off
defparam \display0|rascSaida7seg[3]~3 .lut_mask = 16'h8492;
defparam \display0|rascSaida7seg[3]~3 .sum_lutc_input = "datac";
// synopsys translate_on

cycloneive_lcell_comb \display0|rascSaida7seg[4]~4 (
// Equation(s):
// \display0|rascSaida7seg[4]~4_combout  = (\FD|regUS|DOUT [1] & (\FD|regUS|DOUT [0] & (!\FD|regUS|DOUT [3]))) # (!\FD|regUS|DOUT [1] & ((\FD|regUS|DOUT [2] & ((!\FD|regUS|DOUT [3]))) # (!\FD|regUS|DOUT [2] & (\FD|regUS|DOUT [0]))))

	.dataa(\FD|regUS|DOUT [1]),
	.datab(\FD|regUS|DOUT [0]),
	.datac(\FD|regUS|DOUT [3]),
	.datad(\FD|regUS|DOUT [2]),
	.cin(gnd),
	.combout(\display0|rascSaida7seg[4]~4_combout ),
	.cout());
// synopsys translate_off
defparam \display0|rascSaida7seg[4]~4 .lut_mask = 16'h0D4C;
defparam \display0|rascSaida7seg[4]~4 .sum_lutc_input = "datac";
// synopsys translate_on

cycloneive_lcell_comb \display0|rascSaida7seg[5]~5 (
// Equation(s):
// \display0|rascSaida7seg[5]~5_combout  = (\FD|regUS|DOUT [2] & (\FD|regUS|DOUT [0] & (\FD|regUS|DOUT [1] $ (\FD|regUS|DOUT [3])))) # (!\FD|regUS|DOUT [2] & (!\FD|regUS|DOUT [3] & ((\FD|regUS|DOUT [0]) # (\FD|regUS|DOUT [1]))))

	.dataa(\FD|regUS|DOUT [2]),
	.datab(\FD|regUS|DOUT [0]),
	.datac(\FD|regUS|DOUT [1]),
	.datad(\FD|regUS|DOUT [3]),
	.cin(gnd),
	.combout(\display0|rascSaida7seg[5]~5_combout ),
	.cout());
// synopsys translate_off
defparam \display0|rascSaida7seg[5]~5 .lut_mask = 16'h08D4;
defparam \display0|rascSaida7seg[5]~5 .sum_lutc_input = "datac";
// synopsys translate_on

cycloneive_lcell_comb \display0|rascSaida7seg[6]~6 (
// Equation(s):
// \display0|rascSaida7seg[6]~6_combout  = (\FD|regUS|DOUT [0] & (!\FD|regUS|DOUT [3] & (\FD|regUS|DOUT [2] $ (!\FD|regUS|DOUT [1])))) # (!\FD|regUS|DOUT [0] & (!\FD|regUS|DOUT [1] & (\FD|regUS|DOUT [2] $ (!\FD|regUS|DOUT [3]))))

	.dataa(\FD|regUS|DOUT [2]),
	.datab(\FD|regUS|DOUT [0]),
	.datac(\FD|regUS|DOUT [1]),
	.datad(\FD|regUS|DOUT [3]),
	.cin(gnd),
	.combout(\display0|rascSaida7seg[6]~6_combout ),
	.cout());
// synopsys translate_off
defparam \display0|rascSaida7seg[6]~6 .lut_mask = 16'h0285;
defparam \display0|rascSaida7seg[6]~6 .sum_lutc_input = "datac";
// synopsys translate_on

cycloneive_io_ibuf \KEY[0]~input (
	.i(KEY[0]),
	.ibar(gnd),
	.o(\KEY[0]~input_o ));
// synopsys translate_off
defparam \KEY[0]~input .bus_hold = "false";
defparam \KEY[0]~input .simulate_z_as = "z";
// synopsys translate_on

cycloneive_io_ibuf \KEY[1]~input (
	.i(KEY[1]),
	.ibar(gnd),
	.o(\KEY[1]~input_o ));
// synopsys translate_off
defparam \KEY[1]~input .bus_hold = "false";
defparam \KEY[1]~input .simulate_z_as = "z";
// synopsys translate_on

cycloneive_io_ibuf \KEY[2]~input (
	.i(KEY[2]),
	.ibar(gnd),
	.o(\KEY[2]~input_o ));
// synopsys translate_off
defparam \KEY[2]~input .bus_hold = "false";
defparam \KEY[2]~input .simulate_z_as = "z";
// synopsys translate_on

cycloneive_io_ibuf \KEY[3]~input (
	.i(KEY[3]),
	.ibar(gnd),
	.o(\KEY[3]~input_o ));
// synopsys translate_off
defparam \KEY[3]~input .bus_hold = "false";
defparam \KEY[3]~input .simulate_z_as = "z";
// synopsys translate_on

cycloneive_io_ibuf \SW[0]~input (
	.i(SW[0]),
	.ibar(gnd),
	.o(\SW[0]~input_o ));
// synopsys translate_off
defparam \SW[0]~input .bus_hold = "false";
defparam \SW[0]~input .simulate_z_as = "z";
// synopsys translate_on

cycloneive_io_ibuf \SW[1]~input (
	.i(SW[1]),
	.ibar(gnd),
	.o(\SW[1]~input_o ));
// synopsys translate_off
defparam \SW[1]~input .bus_hold = "false";
defparam \SW[1]~input .simulate_z_as = "z";
// synopsys translate_on

cycloneive_io_ibuf \SW[2]~input (
	.i(SW[2]),
	.ibar(gnd),
	.o(\SW[2]~input_o ));
// synopsys translate_off
defparam \SW[2]~input .bus_hold = "false";
defparam \SW[2]~input .simulate_z_as = "z";
// synopsys translate_on

cycloneive_io_ibuf \SW[3]~input (
	.i(SW[3]),
	.ibar(gnd),
	.o(\SW[3]~input_o ));
// synopsys translate_off
defparam \SW[3]~input .bus_hold = "false";
defparam \SW[3]~input .simulate_z_as = "z";
// synopsys translate_on

cycloneive_io_ibuf \SW[4]~input (
	.i(SW[4]),
	.ibar(gnd),
	.o(\SW[4]~input_o ));
// synopsys translate_off
defparam \SW[4]~input .bus_hold = "false";
defparam \SW[4]~input .simulate_z_as = "z";
// synopsys translate_on

cycloneive_io_ibuf \SW[5]~input (
	.i(SW[5]),
	.ibar(gnd),
	.o(\SW[5]~input_o ));
// synopsys translate_off
defparam \SW[5]~input .bus_hold = "false";
defparam \SW[5]~input .simulate_z_as = "z";
// synopsys translate_on

cycloneive_io_ibuf \SW[6]~input (
	.i(SW[6]),
	.ibar(gnd),
	.o(\SW[6]~input_o ));
// synopsys translate_off
defparam \SW[6]~input .bus_hold = "false";
defparam \SW[6]~input .simulate_z_as = "z";
// synopsys translate_on

cycloneive_io_ibuf \SW[7]~input (
	.i(SW[7]),
	.ibar(gnd),
	.o(\SW[7]~input_o ));
// synopsys translate_off
defparam \SW[7]~input .bus_hold = "false";
defparam \SW[7]~input .simulate_z_as = "z";
// synopsys translate_on

cycloneive_io_ibuf \SW[8]~input (
	.i(SW[8]),
	.ibar(gnd),
	.o(\SW[8]~input_o ));
// synopsys translate_off
defparam \SW[8]~input .bus_hold = "false";
defparam \SW[8]~input .simulate_z_as = "z";
// synopsys translate_on

cycloneive_io_ibuf \SW[9]~input (
	.i(SW[9]),
	.ibar(gnd),
	.o(\SW[9]~input_o ));
// synopsys translate_off
defparam \SW[9]~input .bus_hold = "false";
defparam \SW[9]~input .simulate_z_as = "z";
// synopsys translate_on

cycloneive_io_ibuf \SW[10]~input (
	.i(SW[10]),
	.ibar(gnd),
	.o(\SW[10]~input_o ));
// synopsys translate_off
defparam \SW[10]~input .bus_hold = "false";
defparam \SW[10]~input .simulate_z_as = "z";
// synopsys translate_on

cycloneive_io_ibuf \SW[11]~input (
	.i(SW[11]),
	.ibar(gnd),
	.o(\SW[11]~input_o ));
// synopsys translate_off
defparam \SW[11]~input .bus_hold = "false";
defparam \SW[11]~input .simulate_z_as = "z";
// synopsys translate_on

cycloneive_io_ibuf \SW[12]~input (
	.i(SW[12]),
	.ibar(gnd),
	.o(\SW[12]~input_o ));
// synopsys translate_off
defparam \SW[12]~input .bus_hold = "false";
defparam \SW[12]~input .simulate_z_as = "z";
// synopsys translate_on

cycloneive_io_ibuf \SW[13]~input (
	.i(SW[13]),
	.ibar(gnd),
	.o(\SW[13]~input_o ));
// synopsys translate_off
defparam \SW[13]~input .bus_hold = "false";
defparam \SW[13]~input .simulate_z_as = "z";
// synopsys translate_on

cycloneive_io_ibuf \SW[14]~input (
	.i(SW[14]),
	.ibar(gnd),
	.o(\SW[14]~input_o ));
// synopsys translate_off
defparam \SW[14]~input .bus_hold = "false";
defparam \SW[14]~input .simulate_z_as = "z";
// synopsys translate_on

cycloneive_io_ibuf \SW[15]~input (
	.i(SW[15]),
	.ibar(gnd),
	.o(\SW[15]~input_o ));
// synopsys translate_off
defparam \SW[15]~input .bus_hold = "false";
defparam \SW[15]~input .simulate_z_as = "z";
// synopsys translate_on

cycloneive_io_ibuf \SW[16]~input (
	.i(SW[16]),
	.ibar(gnd),
	.o(\SW[16]~input_o ));
// synopsys translate_off
defparam \SW[16]~input .bus_hold = "false";
defparam \SW[16]~input .simulate_z_as = "z";
// synopsys translate_on

cycloneive_io_ibuf \SW[17]~input (
	.i(SW[17]),
	.ibar(gnd),
	.o(\SW[17]~input_o ));
// synopsys translate_off
defparam \SW[17]~input .bus_hold = "false";
defparam \SW[17]~input .simulate_z_as = "z";
// synopsys translate_on

assign Mux_sel_6[0] = \Mux_sel_6[0]~output_o ;

assign Mux_sel_6[1] = \Mux_sel_6[1]~output_o ;

assign Mux_sel_6[2] = \Mux_sel_6[2]~output_o ;

assign Mux_sel_5[0] = \Mux_sel_5[0]~output_o ;

assign Mux_sel_5[1] = \Mux_sel_5[1]~output_o ;

assign Mux_sel_5[2] = \Mux_sel_5[2]~output_o ;

assign funcaoULA[0] = \funcaoULA[0]~output_o ;

assign funcaoULA[1] = \funcaoULA[1]~output_o ;

assign state[0] = \state[0]~output_o ;

assign state[1] = \state[1]~output_o ;

assign state[2] = \state[2]~output_o ;

assign state[3] = \state[3]~output_o ;

assign is_ajusta = \is_ajusta~output_o ;

assign EnDH = \EnDH~output_o ;

assign EnUH = \EnUH~output_o ;

assign EnDM = \EnDM~output_o ;

assign \EnUM  = \EnUM~output_o ;

assign EnDS = \EnDS~output_o ;

assign EnUS = \EnUS~output_o ;

assign ResDH = \ResDH~output_o ;

assign ResUH = \ResUH~output_o ;

assign ResDM = \ResDM~output_o ;

assign ResUM = \ResUM~output_o ;

assign ResDS = \ResDS~output_o ;

assign ResUS = \ResUS~output_o ;

assign um_seg_out = \um_seg_out~output_o ;

assign DH_out[0] = \DH_out[0]~output_o ;

assign DH_out[1] = \DH_out[1]~output_o ;

assign DH_out[2] = \DH_out[2]~output_o ;

assign DH_out[3] = \DH_out[3]~output_o ;

assign UH_out[0] = \UH_out[0]~output_o ;

assign UH_out[1] = \UH_out[1]~output_o ;

assign UH_out[2] = \UH_out[2]~output_o ;

assign UH_out[3] = \UH_out[3]~output_o ;

assign DM_out[0] = \DM_out[0]~output_o ;

assign DM_out[1] = \DM_out[1]~output_o ;

assign DM_out[2] = \DM_out[2]~output_o ;

assign DM_out[3] = \DM_out[3]~output_o ;

assign UM_out[0] = \UM_out[0]~output_o ;

assign UM_out[1] = \UM_out[1]~output_o ;

assign UM_out[2] = \UM_out[2]~output_o ;

assign UM_out[3] = \UM_out[3]~output_o ;

assign DS_out[0] = \DS_out[0]~output_o ;

assign DS_out[1] = \DS_out[1]~output_o ;

assign DS_out[2] = \DS_out[2]~output_o ;

assign DS_out[3] = \DS_out[3]~output_o ;

assign US_out[0] = \US_out[0]~output_o ;

assign US_out[1] = \US_out[1]~output_o ;

assign US_out[2] = \US_out[2]~output_o ;

assign US_out[3] = \US_out[3]~output_o ;

assign controle_out[0] = \controle_out[0]~output_o ;

assign controle_out[1] = \controle_out[1]~output_o ;

assign controle_out[2] = \controle_out[2]~output_o ;

assign controle_out[3] = \controle_out[3]~output_o ;

assign controle_out[4] = \controle_out[4]~output_o ;

assign controle_out[5] = \controle_out[5]~output_o ;

assign controle_out[6] = \controle_out[6]~output_o ;

assign controle_out[7] = \controle_out[7]~output_o ;

assign controle_out[8] = \controle_out[8]~output_o ;

assign controle_out[9] = \controle_out[9]~output_o ;

assign controle_out[10] = \controle_out[10]~output_o ;

assign controle_out[11] = \controle_out[11]~output_o ;

assign controle_out[12] = \controle_out[12]~output_o ;

assign controle_out[13] = \controle_out[13]~output_o ;

assign controle_out[14] = \controle_out[14]~output_o ;

assign controle_out[15] = \controle_out[15]~output_o ;

assign controle_out[16] = \controle_out[16]~output_o ;

assign controle_out[17] = \controle_out[17]~output_o ;

assign controle_out[18] = \controle_out[18]~output_o ;

assign controle_out[19] = \controle_out[19]~output_o ;

assign controle_out[20] = \controle_out[20]~output_o ;

assign LEDR[0] = \LEDR[0]~output_o ;

assign LEDR[1] = \LEDR[1]~output_o ;

assign LEDR[2] = \LEDR[2]~output_o ;

assign LEDR[3] = \LEDR[3]~output_o ;

assign LEDR[4] = \LEDR[4]~output_o ;

assign LEDR[5] = \LEDR[5]~output_o ;

assign LEDR[6] = \LEDR[6]~output_o ;

assign LEDR[7] = \LEDR[7]~output_o ;

assign LEDR[8] = \LEDR[8]~output_o ;

assign LEDR[9] = \LEDR[9]~output_o ;

assign LEDR[10] = \LEDR[10]~output_o ;

assign LEDR[11] = \LEDR[11]~output_o ;

assign LEDR[12] = \LEDR[12]~output_o ;

assign LEDR[13] = \LEDR[13]~output_o ;

assign LEDR[14] = \LEDR[14]~output_o ;

assign LEDR[15] = \LEDR[15]~output_o ;

assign LEDR[16] = \LEDR[16]~output_o ;

assign LEDR[17] = \LEDR[17]~output_o ;

assign LEDG[0] = \LEDG[0]~output_o ;

assign LEDG[1] = \LEDG[1]~output_o ;

assign LEDG[2] = \LEDG[2]~output_o ;

assign LEDG[3] = \LEDG[3]~output_o ;

assign LEDG[4] = \LEDG[4]~output_o ;

assign LEDG[5] = \LEDG[5]~output_o ;

assign LEDG[6] = \LEDG[6]~output_o ;

assign LEDG[7] = \LEDG[7]~output_o ;

assign LEDG[8] = \LEDG[8]~output_o ;

assign HEX0[0] = \HEX0[0]~output_o ;

assign HEX0[1] = \HEX0[1]~output_o ;

assign HEX0[2] = \HEX0[2]~output_o ;

assign HEX0[3] = \HEX0[3]~output_o ;

assign HEX0[4] = \HEX0[4]~output_o ;

assign HEX0[5] = \HEX0[5]~output_o ;

assign HEX0[6] = \HEX0[6]~output_o ;

assign HEX1[0] = \HEX1[0]~output_o ;

assign HEX1[1] = \HEX1[1]~output_o ;

assign HEX1[2] = \HEX1[2]~output_o ;

assign HEX1[3] = \HEX1[3]~output_o ;

assign HEX1[4] = \HEX1[4]~output_o ;

assign HEX1[5] = \HEX1[5]~output_o ;

assign HEX1[6] = \HEX1[6]~output_o ;

assign HEX2[0] = \HEX2[0]~output_o ;

assign HEX2[1] = \HEX2[1]~output_o ;

assign HEX2[2] = \HEX2[2]~output_o ;

assign HEX2[3] = \HEX2[3]~output_o ;

assign HEX2[4] = \HEX2[4]~output_o ;

assign HEX2[5] = \HEX2[5]~output_o ;

assign HEX2[6] = \HEX2[6]~output_o ;

assign HEX3[0] = \HEX3[0]~output_o ;

assign HEX3[1] = \HEX3[1]~output_o ;

assign HEX3[2] = \HEX3[2]~output_o ;

assign HEX3[3] = \HEX3[3]~output_o ;

assign HEX3[4] = \HEX3[4]~output_o ;

assign HEX3[5] = \HEX3[5]~output_o ;

assign HEX3[6] = \HEX3[6]~output_o ;

assign HEX4[0] = \HEX4[0]~output_o ;

assign HEX4[1] = \HEX4[1]~output_o ;

assign HEX4[2] = \HEX4[2]~output_o ;

assign HEX4[3] = \HEX4[3]~output_o ;

assign HEX4[4] = \HEX4[4]~output_o ;

assign HEX4[5] = \HEX4[5]~output_o ;

assign HEX4[6] = \HEX4[6]~output_o ;

assign HEX5[0] = \HEX5[0]~output_o ;

assign HEX5[1] = \HEX5[1]~output_o ;

assign HEX5[2] = \HEX5[2]~output_o ;

assign HEX5[3] = \HEX5[3]~output_o ;

assign HEX5[4] = \HEX5[4]~output_o ;

assign HEX5[5] = \HEX5[5]~output_o ;

assign HEX5[6] = \HEX5[6]~output_o ;

assign HEX6[0] = \HEX6[0]~output_o ;

assign HEX6[1] = \HEX6[1]~output_o ;

assign HEX6[2] = \HEX6[2]~output_o ;

assign HEX6[3] = \HEX6[3]~output_o ;

assign HEX6[4] = \HEX6[4]~output_o ;

assign HEX6[5] = \HEX6[5]~output_o ;

assign HEX6[6] = \HEX6[6]~output_o ;

assign HEX7[0] = \HEX7[0]~output_o ;

assign HEX7[1] = \HEX7[1]~output_o ;

assign HEX7[2] = \HEX7[2]~output_o ;

assign HEX7[3] = \HEX7[3]~output_o ;

assign HEX7[4] = \HEX7[4]~output_o ;

assign HEX7[5] = \HEX7[5]~output_o ;

assign HEX7[6] = \HEX7[6]~output_o ;

endmodule
